<?php defined('BASEPATH') OR exit('No direct script access allowed');

class Dashboard extends CI_Controller {
    public function __construct() {
        parent::__construct();
        $this->form_validation->set_error_delimiters('<p class="error_message"><i class="fa fa-exclamation-circle"></i>', '</p>');
        $this->load->model('Users_model');
    }

    public function index($keyword = null) {
        if ($this->session->userdata('executive_loggedin')) {
            $data = $this->session->userdata('executive_loggedin');
            $data['page_title'] = 'Executive Admin Dashboard';
            $keyword = $keyword == null ? '' : urldecode($keyword);
            $executive_user_companies = $this->Users_model->get_executive_users_companies($data['executive_user']['sid'], $keyword);
            $deleted_companies = array();
            if(!empty($executive_user_companies)){ // check for deleted companies
               foreach($executive_user_companies as $key => $value){
                   $company_details = $this->Users_model->get_company_details($value['company_sid']);
                   
                   if(empty($company_details)){
                       $deleted_companies[] = $key;
                    } 
               } 
            }
            
            if(!empty($deleted_companies)){
                foreach($deleted_companies as $deleted_company){
                    unset($executive_user_companies[$deleted_company]);
                }
                $executive_user_companies = array_values($executive_user_companies);
            }
            
            $data['executive_user_companies'] = $executive_user_companies;
            $this->load->view('main/header', $data);
            $this->load->view('dashboard/dashboard_view');
            $this->load->view('main/footer');
        } else {
            redirect(base_url('login'), "refresh");
        }
    }
    
    public function reports($company_sid) {
        if ($this->session->userdata('executive_loggedin')) {
            $data = $this->session->userdata('executive_loggedin');
            
            if ($company_sid == 0 || $company_sid == NULL) {
                $this->session->set_flashdata('message', 'Company not found');
                redirect(base_url('dashboard'), "refresh");
            }
            
            $exists = $this->Users_model->check_company($data['executive_user']['sid'], $company_sid);

            if ($exists) {
                $data['company_sid'] = $company_sid;
                $data['title'] = 'Reports';
                $data['page_title'] = 'Executive Admin Reports';
                $this->load->view('main/header', $data);
                $this->load->view('dashboard/reports');
                $this->load->view('main/footer');
            } else {
                $this->session->set_flashdata('message', 'Company not found');
                redirect(base_url('dashboard'), "refresh");
            }
        } else {
            redirect(base_url('login'), "refresh");
        }
    }

    public function manage_admin_companies($company_id) {
        if ($this->session->userdata('executive_loggedin')) {
            $data = $this->session->userdata('executive_loggedin');
            $data['executive_user_companies'] = $this->Users_model->get_executive_users_companies($data['executive_user']['sid']);
            
            if ($company_id == 0 || $company_id == NULL) {
                $this->session->set_flashdata('message', 'Company not found');
                redirect(base_url('dashboard'), "refresh");
            }

            $exists = $this->Users_model->check_company($data['executive_user']['sid'], $company_id);

            if ($exists) {
                $data['admin_invoices'] = $this->Users_model->get_admin_invoices($company_id);
                $data['marketplace_invoices'] = $this->Users_model->get_admin_marketplace_invoices($company_id);
                $employee_details = $this->Users_model->get_company_employees($company_id);
                $company_details = $this->Users_model->get_company_details($company_id);
                if(empty($company_details)){
                    $this->session->set_flashdata('message', 'Company not found');
                    redirect(base_url('dashboard'), "refresh");
                } else {
                    $company_details = $company_details[0];
                }
                
                $data['location_info'] = db_get_state_name($company_details['Location_State']);
                $data['career_website'] = STORE_PROTOCOL . db_get_sub_domain($company_id);
                $data['company'] = $company_details;
                $data['employees'] = $employee_details;
                $this->load->view('main/header', $data);
                $this->load->view('dashboard/manage_company');
                $this->load->view('main/footer');
            } else {
                $this->session->set_flashdata('message', 'Company not found');
                redirect(base_url('dashboard'), "refresh");
            }
        } else {
            redirect(base_url('login'), "refresh");
        }
    }

    public function company_login() {
        $company_sid = $this->input->post("company_sid");
        $action = $this->input->post("action");
        $logged_in_sid = $this->input->post('logged_in_sid');
        
        if ($action == 'login') {
            $data['employer_detail'] = $this->Users_model->get_company_details($logged_in_sid); // logged in
            $data['company_detail'] = $this->Users_model->get_company_details($company_sid);
            $data['portal'] = $this->Users_model->get_portal_details($company_sid);
            $data['cart'] = db_get_cart_content($company_sid);
            $sess_array = array();
            $sess_array = array(
                                'employer_detail' => $data['employer_detail'][0],
                                'company_detail' => $data['company_detail'][0],
                                'cart' => $data['cart'],
                                'portal_detail' => $data['portal']
                            );
            $this->session->set_userdata('logged_in', $sess_array);
        }
    }

    public function forgot_password() {      
        $config = array(
                        array(
                            'field' => 'email',
                            'label' => 'Email',
                            'rules' => 'trim|required|valid_email|xss_clean'
                        )
                    );
        $this->form_validation->set_rules($config);
        $this->form_validation->set_error_delimiters('<p class="error_message"><i class="fa fa-exclamation-circle"></i> ', '</p>');

        if ($this->form_validation->run() == FALSE) {
            $data['page_title'] = "Forgot Password";
            $this->load->view('main/header', $data);
            $this->load->view('users/forgot_password');
            $this->load->view('main/footer');
        } else {
            $email = $this->input->post('email');
            $result = $this->Users_model->check_email($email);
            
            if ($result) { 
                $this->session->set_flashdata('message', 'Sorry! No E-Mail record found!');
            } else {  
                $random_string = generateRandomString(12);
                $this->Users_model->varification_key($email, $random_string); // update activation code for current user record in table                
                $user_data = $this->Users_model->email_user_data($email);
                $this->session->set_flashdata('message', 'Check Your Email and follow link to Reset Your password.');
                $url = base_url() . 'dashboard/change_password/' . $user_data["username"] . '/' . $user_data["activation_code"];                
                $emailTemplateBody = 'Dear ' . $user_data["username"] . ', <br>';
                $emailTemplateBody = $emailTemplateBody . 'You can change your password by following the link below : ' . '<br>';
                $emailTemplateBody = $emailTemplateBody . 'Your username is : ' . $user_data["username"] . '<br>';
                $emailTemplateBody = $emailTemplateBody . '<a href="'.$url.'">Change Your Password</a><br><br>';
                $from = TO_EMAIL_DEV; //$emailTemplateData['from_email'];
                $to = $email;
                $subject = 'Password Recovery'; //$emailTemplateData['subject'];
                $from_name = ucwords(STORE_DOMAIN); //$emailTemplateData['from_name'];
                
                $body = EMAIL_HEADER
                        . $emailTemplateBody
                        . EMAIL_FOOTER;
                sendMail($from, $to, $subject, $body, $from_name);

                $emailData = array(
                                    'date' => date('Y-m-d H:i:s'),
                                    'subject' => $subject,
                                    'email' => $to,
                                    'message' => $body,
                                    'username' => $user_data['sid'],
                                );
                $this->Users_model->save_email_logs($emailData);
            }          
            redirect('dashboard/forgot_password');
        }
    }
    
    function change_password($user = NULL, $key = NULL) {
        if ($this->session->userdata('logged_in')) { 
            redirect('dashboard', 'refresh');
        }
        
        $data['verification'] = $this->Users_model->varification_user_key($user, $key);
        
        if($data['verification'] == false){
            redirect('login');
        }
        
        $config = array(
                        array(
                            'field' => 'password',
                            'label' => 'Password',
                            'rules' => 'md5|trim|required|xss_clean'
                        ),
                        array(
                            'field' => 'retypepassword',
                            'label' => 'Re Enter Passsword',
                            'rules' => 'md5|trim|required|xss_clean'
                        )
                    );

        $this->form_validation->set_rules($config);
        $this->form_validation->set_error_delimiters('<p class="error_message"><i class="fa fa-exclamation-circle"></i> ', '</p>');

        if($this->form_validation->run() == FALSE) {
            $retrn = $this->Users_model->varification_user_key($user, $key);
            $data['page_title'] = "Change Password";
            $this->load->view('main/header', $data);
            $this->load->view('users/change_password');
            $this->load->view('main/footer');
        } else {            
            $password = $this->input->post('password');
            $re_password = $this->input->post('retypepassword');
            
            if($password == $re_password) {
                $this->Users_model->change_password($password, $user, $key);
                $this->Users_model->reset_key($user);
                $user_data = $this->Users_model->username_user_data($user);
                
                $from = TO_EMAIL_DEV; 
                $to = $user_data['email'];
                $subject = 'Password Changed Successfully'; 
                $from_name = ucwords(STORE_DOMAIN); 
                
                $emailTemplateBody = 'Your Password has been successfully Updated.<br>';
                $emailTemplateBody = $emailTemplateBody . 'Please login using this : <a href="'.STORE_FULL_URL_SSL.'/login">Link</a><br><br>';
                $emailTemplateBody = $emailTemplateBody . 'We are glad you have chosen to be a part of '.ucwords(STORE_DOMAIN).'.<br>';
                $emailTemplateBody = $emailTemplateBody . 'Please visit us often.<br>';
                $emailTemplateBody = $emailTemplateBody . ucwords(STORE_DOMAIN).' is a dynamic environment, with many changes and updates happening every day.<br><br>';
                $emailTemplateBody = $emailTemplateBody . 'We are here to help you Succeed!!.<br>';
                $emailTemplateBody = $emailTemplateBody . 'Please Email or Call us any time with questions or comments.<br>';
                $emailTemplateBody = $emailTemplateBody . 'We would love to hear from you.<br>';
                $emailTemplateBody = $emailTemplateBody . 'Thank You<br>';
                
                $body = EMAIL_HEADER
                        . $emailTemplateBody
                        . EMAIL_FOOTER;
                sendMail($from, $to, $subject, $body, $from_name);

                $emailData = array(
                                    'date' => date('Y-m-d H:i:s'),
                                    'subject' => $subject,
                                    'email' => $to,
                                    'message' => $body,
                                    'username' => $user_data['sid'],
                                );
                $this->Users_model->save_email_logs($emailData);
            }
            $this->session->set_flashdata('message', 'Your Password has been changed Successfully!');
            redirect('login');
        }
    }
}