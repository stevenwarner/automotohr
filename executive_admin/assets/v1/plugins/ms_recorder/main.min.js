function msVideoRecorder(e){this.mediaSource=void 0,this.mediaRecorder=void 0,this.recordedBlobs=[],this.sourceBuffer=void 0,this.isRecording=!1,this.sourceVideo=document.getElementById(`${e.recorderPlayer}`),this.targetVideo=document.getElementById(`${e.previewPlayer}`),this.recordButton=document.getElementById(`${e.recordButton}`),this.playButton=document.getElementById(`${e.playRecordedVideoBTN}`),this.pauseRecordingButton=document.getElementById(`${e.pauseRecordedVideoBTN}`),this.resumeRecordingButton=document.getElementById(`${e.resumeRecordedVideoBTN}`),this.removeButton=document.getElementById(`${e.removeRecordedVideoBTN}`),this.errorSectionReference=document.getElementById(e.errorSectionReference),this.toggleRecording=()=>{!1===this.isRecording?(this.isRecording=!0,this.startRecording()):(this.stopRecording(),this.isRecording=!1,this.playButton&&(this.playButton.disabled=!1),this.targetVideo.parentElement.classList.remove("hidden"),this.targetVideo.parentElement.parentElement.classList.remove("hidden"))},this.startRecording=()=>{let e={mimeType:"video/webm",bitsPerSecond:1e7};this.recordedBlobs=[];try{this.mediaRecorder=new MediaRecorder(window.stream,e)}catch(t){try{e={mimeType:"video/webm,codecs=vp9",bitsPerSecond:1e5},this.mediaRecorder=new MediaRecorder(window.stream,e)}catch(t){try{e="video/vp8",this.mediaRecorder=new MediaRecorder(window.stream,e)}catch(e){return void alert("MediaRecorder is not supported by this browser.\n\nTry Firefox 29 or later, or Chrome 47 or later, with Enable experimental Web Platform features enabled from chrome://flags.")}}}this.recordButton.innerHTML='<i class="fa fa-stop-circle"></i> Stop Recording',this.playButton&&(this.playButton.disabled=!0),this.mediaRecorder.onstop=this.handleStop,this.mediaRecorder.ondataavailable=this.handleDataAvailable,this.mediaRecorder.start(10),this.pauseRecordingButton.classList.remove("hidden"),this.resumeRecordingButton.classList.add("hidden")},this.stopRecording=()=>{this.removeButton.classList.remove("hidden"),this.playButton.classList.remove("hidden"),this.pauseRecordingButton.classList.add("hidden"),this.recordButton.innerHTML='<i class="fa fa-stop"></i> Start Recording',this.mediaRecorder.stop(),this.targetVideo.controls=!0,this.play()},this.pauseRecording=()=>{this.pauseRecordingButton.classList.add("hidden"),this.resumeRecordingButton.classList.remove("hidden"),this.mediaRecorder.pause()},this.resumeRecording=()=>{this.resumeRecordingButton.classList.add("hidden"),this.pauseRecordingButton.classList.remove("hidden"),this.mediaRecorder.resume()},this.handleSourceOpen=()=>{sourceBuffer=this.mediaSource.addSourceBuffer('video/webm; codecs="vp8"')},this.handleDataAvailable=e=>{e.data&&e.data.size>0&&this.recordedBlobs.push(e.data),window.recordedBlobs=this.recordedBlobs},this.errorCallback=e=>{this.errorSectionReference.innerHTML='\n\t\t\t<p class="alert alert-danger"><strong>Please, allow microphone and camera access to record the video.</strong></p>\n\t\t'},this.successCallback=e=>{window.stream=e,this.mediaSource=new MediaSource,this.mediaSource.addEventListener("sourceopen",this.handleSourceOpen),this.recordButton.onclick=this.toggleRecording,this.pauseRecordingButton.onclick=this.pauseRecording,this.resumeRecordingButton.onclick=this.resumeRecording,this.playButton&&(this.playButton.onclick=this.play),this.removeButton&&(this.removeButton.onclick=this.remove),this.sourceVideo.srcObject=e,this.sourceVideo.play(),this.recordButton.classList.remove("hidden")},this.handleStop=e=>{},this.getVideo=()=>new Promise((e=>{const t=new FileReader;t.onload=function(t){e(t.target.result)},t.readAsDataURL(new Blob(this.recordedBlobs,{type:"video/webm"}))})),this.play=()=>{const e=new Blob(this.recordedBlobs,{type:"video/webm"});this.targetVideo.src=window.URL.createObjectURL(e),this.targetVideo.play()},this.remove=()=>{this.isRecording=!1,this.targetVideo.src=null,this.recordedBlobs=[],this.playButton.classList.add("hidden"),this.removeButton.classList.add("hidden")},this.stop=()=>{this.targetVideo.stop()},this.close=()=>{this.isRecording=!1,this.pauseRecordingButton.classList.add("hidden"),this.resumeRecordingButton.classList.add("hidden"),void 0!==window.stream&&window.stream.getTracks().forEach((function(e){"live"==e.readyState&&e.stop()}))},this.init=()=>{"https:"===location.protocol||location.host;navigator.getUserMedia=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia;navigator.getUserMedia({audio:!0,video:!0},this.successCallback,this.errorCallback)}}