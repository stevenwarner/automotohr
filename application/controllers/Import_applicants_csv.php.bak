<?php defined('BASEPATH') OR exit('No direct script access allowed');
ini_set('max_execution_time', 800);
class Import_applicants_csv extends Public_Controller {
    public function __construct() {
        parent::__construct();
        $this->load->helper('path');
        $this->load->library('parse_csv');
        $this->load->model('import_csv_model');
    }

    public function index() {
        if ($this->session->userdata('logged_in')) {
            $data['title'] = 'Import Applicants From CSV File';
            $data['session'] = $this->session->userdata('logged_in');
            $security_sid = $data['session']['employer_detail']['sid'];
            $security_details = db_get_access_level_details($security_sid);
            $data['security_details'] = $security_details;
            check_access_permissions($security_details, 'my_settings', 'import_applicants_csv');
            $company_id = $data['session']['company_detail']['sid'];
            $company_name = $data['session']['company_detail']['CompanyName'];
            $employer_id = $data['session']['employer_detail']['sid'];
            $data['employerData'] = $this->import_csv_model->getEmployerDetail($employer_id);
            $all_status = $this->import_csv_model->get_default_status_sid_and_text($employer_id);
            $status_sid = $all_status['status_sid'];
            $status = $all_status['status_name'];
            $insertRecord = false;
            
            if (isset($_POST['action']) && $_POST['action'] == 'upload_file') { //Handle File Upload
                $uploadPath = realpath(APPPATH . '../assets/import_csv/');
                $csvFile = uploadFile($company_name, $uploadPath, 'userfile', 500000, array('csv'));
                $myParsedFile = $this->parse_csv->ParseFile($csvFile);

                if (!empty($myParsedFile)) {
                    $records = $myParsedFile['data'];
                    $titles = $myParsedFile['titles'];
                }

                $firstNameTitles = array('first_name', 'firstName', 'first-name', 'FirstName', 'FName', 'First Name'); // for first_name
                $lastNameTitles = array('last_name', 'lastName', 'last-name', 'LastName', 'LName', 'last name'); //for last_name
                $emailAddressTitles = array('email', 'email_address', 'emailAddress', 'email-address', 'EmailAddress', 'Email', 'E-Mail', 'e-mail');
                $phoneNumberTitles = array('phone_number', 'phoneNumber', 'phone-number', 'PhoneNumber', 'Phone', 'Contact Number', 'Contact'); //for PhoneNumber
                $addressTitles = array('address', 'Address', 'Street Address'); // for Location_Address
                $cityTitles = array('city', 'City'); // for Location_city
                $zipCodeTitles = array('zip_code', 'zipCode', 'zip-code', 'ZipCode', 'zip'); // for Location_ZipCode
                $state = array('state');
                $country = array('country');
                $profile_picture = array('profile', 'profile picture', 'profile_picture', 'profile-picture', 'profilepicture', 'profile picture url', 'profile_picture_url', 'profile-picture-url', 'profilepictureurl');
                $resume = array('resume', 'cv', 'resume url', 'resume_url', 'resume-url', 'resumeurl');
                $cover_letter = array('cover letter', 'cover_letter', 'coverletterurl', 'cover_letter_url', 'cover-letter-url', 'cover_letter-url');                
                $jobTitleTitles = array('job_title', 'jobTitle', 'job-title', 'JobTitle', 'Job Title', 'job title', 'job'); // for Job_title
                $allowedTitles = array_merge($firstNameTitles, $lastNameTitles, $emailAddressTitles, $phoneNumberTitles, $addressTitles, $cityTitles, $zipCodeTitles, $state, $country, $profile_picture, $resume, $cover_letter, $jobTitleTitles);
                $correctTitles = array();
                $correctTitleslowercase = array();

                foreach ($titles as $title) {
                    $lower_title = strtolower($title);
                    $lower_allowedTitles = array_map('strtolower', $allowedTitles);
                    
                    if (in_array($lower_title, $lower_allowedTitles)) {
                        $correctTitles[] = $title;
                        $correctTitleslowercase[] = strtolower($title);
                    }
                }
                
                if (    in_array('email', $correctTitleslowercase) ||
                        in_array('email_address', $correctTitleslowercase) ||
                        in_array('emailaddress', $correctTitleslowercase) ||
                        in_array('email-address', $correctTitleslowercase) ||
                        in_array('e-mail', $correctTitleslowercase) ||
                        in_array('e mail', $correctTitleslowercase)
                ) {
                    $count = 0;

                    foreach ($records as $record) {
                        $recordToInsert = array();
                        $insertRecord = true;
                        $applicant_jobs_list_data = array();
                        $state_info = array();

                        foreach ($correctTitles as $title) {
                            if ((strpos(strtolower($title), 'first') !== false) || (strpos(strtolower($title), 'fname') !== false)) {
                                $recordToInsert['first_name'] = $record[$title];
                            }

                            if ((strpos(strtolower($title), 'last') !== false) || (strpos(strtolower($title), 'lname') !== false)) {
                                $recordToInsert['last_name'] = $record[$title];
                            }

                            if ((strpos(strtolower($title), 'email') !== false) || (strpos(strtolower($title), 'e-mail') !== false) || (strpos(strtolower($title), 'e_mail') !== false) || (strpos(strtolower($title), 'e mail') !== false)) {
                                $recordToInsert['email'] = $record[$title];
                                $email = $record[$title];
                            }

                            if ((strpos(strtolower($title), 'phone') !== false) || (strpos(strtolower($title), 'number') !== false)) {
                                $recordToInsert['phone_number'] = $record[$title];
                            }

                            if ((strpos(strtolower($title), 'address') !== false) || (strpos(strtolower($title), 'Street Address') !== false)) {
                                $recordToInsert['address'] = $record[$title];
                            }

                            if (strpos(strtolower($title), 'city') !== false) {
                                $recordToInsert['city'] = $record[$title];
                            }
                            
                            if ((strpos(strtolower($title), 'zip') !== false) || (strpos(strtolower($title), 'zipcode') !== false)) {
                                $recordToInsert['zipcode'] = $record[$title];
                            }
                            
                            if (strpos(strtolower($title), 'state') !== false) {
                                $state = $record[$title];
                                
                                if($state != null || $state != '') {
                                    $state_info = $this->import_csv_model->get_state_and_country_id($state);
                                }
                                
                                if(!empty($state_info)) {
                                    $recordToInsert['state'] = $state_info['sid'];
                                    $recordToInsert['country'] = $state_info['country_sid'];
                                }
                            }
                            
                            
                            if (strpos(strtolower($title), 'country') !== false) {
                                $country = $record[$title];
                                
                                if(strtolower($country) == 'United States') {
                                    $recordToInsert['country'] = 227;
                                }
                                
                                if(strtolower($country) == 'Canada') {
                                    $recordToInsert['country'] = 38;
                                }
                            }

                            if ((strpos(strtolower($title), 'profile') !== false) || (strpos(strtolower($title), 'picture') !== false)) {
                                $profile_pic_url = $record[$title];
                                
                                if($profile_pic_url != '' || $profile_pic_url != NULL) {
                                    $recordToInsert['pictures'] = $this->import_csv_model->verify_url_data($profile_pic_url);
                                }
                            }

                            if ((strpos(strtolower($title), 'resume') !== false) || (strpos(strtolower($title), 'cv') !== false)) {
                                $resume_url = $record[$title];
                                
                                if($resume_url != '' || $resume_url != NULL) {
                                    $recordToInsert['resume'] = $this->import_csv_model->verify_url_data($resume_url);
                                }
                            }

                            if ((strpos(strtolower($title), 'cover') !== false) || (strpos(strtolower($title), 'letter') !== false)) {
                                $cover_letter = $record[$title];
                                
                                if($cover_letter != '' || $cover_letter != NULL) {
                                    $recordToInsert['cover_letter'] = $this->import_csv_model->verify_url_data($cover_letter);
                                }
                            }

                            if ((strpos(strtolower($title), 'job') !== false) || (strpos(strtolower($title), 'jobTitle') !== false)) {
                                $applicant_jobs_list_data['desired_job_title'] = $record[$title];
                            }

                        }

                        $recordToInsert['employer_sid'] = $company_id;
                        $applicant_jobs_list_data['company_sid'] = $company_id;
                        $applicant_jobs_list_data['date_applied'] = date("Y-m-d H:i:s");

                        if ($insertRecord === true) { //Insert applicant record in Applicant Profile
                            $applicant_sid = $this->import_csv_model->insert_new_applicant($company_id, $email, $recordToInsert);
                            $applicant_jobs_list_data['portal_job_applications_sid'] = $applicant_sid;
                            $applicant_jobs_list_data['status'] = $status;
                            $applicant_jobs_list_data['status_sid'] = $status_sid;
                            $applicant_jobs_list_data['applicant_source'] = 'csv imported data';
                            $applicant_jobs_list_data['applicant_type'] = 'Manual Candidate';
                            $this->import_csv_model->insert_new_applicant_job_record($company_id, $applicant_sid, $applicant_jobs_list_data);//Insert applicant record in Jobs list
                            $count++;
                        }
                    }
                }

                if ($count > 0) {
                    $this->session->set_flashdata('message', '<b>Success:</b> You have successfuly imported ' . $count . ' applicants.');
                    redirect('application_tracking_system/active/all/all/all/all', 'refresh');
                } else {
                    $this->session->set_flashdata('message', '<b>Error:</b> Please provide proper CSV file.');
                    redirect('import_applicants_csv', 'refresh');
                }
            }
            $this->load->view('main/header', $data);
            $this->load->view('import_applicants_csv/index');
            $this->load->view('main/footer');
        } else {
            redirect('login', "refresh");
        }
    }
}