<?php

defined('BASEPATH') OR exit('No direct script access allowed');

class Cron_document_assign extends Public_Controller {

    public function __construct() {
        parent::__construct();
        $this->load->model('hr_documents_management_model', 'hrm');
    }


    //
    function index(){
        //
        // Daily 10:20
        // Weekly 4 10:20
        // Monthly 23 10:20
        // Yearly 1/12 10:20
        //
        $documents = $this->hrm->getAssignAndSendDocuments(['weekly', 'monthly', 'yearly', 'custom', 'daily']);
        //
        if(!$documents || !count($documents)) exit(0);
        $dates = array(1 => "Mon", 2 => "Tue", 3 => "Wed", 4 => "Thu", 5 => "Fri", 6 => "Sat", 7 => "Sun");

        
        //
        // $hi2 = "07:00";
        // $d = 18;
        // $m = 11;
        //
        foreach(
            $documents as $document
        ){
            //
            $md = reset_datetime([ 'datetime' => date('m/d', strtotime('now')), 'from_format' => 'm/d', 'format' => 'm/d', 'from_timezone' => STORE_DEFAULT_TIMEZONE_ABBR, 'new_zone' => $document['timezone'], '_this' => $this ]);
            $m = reset_datetime([ 'datetime' => date('m', strtotime('now')), 'from_format' => 'm', 'format' => 'm', 'from_timezone' => STORE_DEFAULT_TIMEZONE_ABBR, 'new_zone' => $document['timezone'], '_this' => $this ]);
            $d = reset_datetime([ 'datetime' => date('d', strtotime('now')), 'from_format' => 'd', 'format' => 'd', 'from_timezone' => STORE_DEFAULT_TIMEZONE_ABBR, 'new_zone' => $document['timezone'], '_this' => $this ]);
            $hi = reset_datetime([ 'datetime' => date('h:i A', strtotime('now')), 'from_format' => 'h:i A', 'format' => 'h:i A', 'from_timezone' => STORE_DEFAULT_TIMEZONE_ABBR, 'new_zone' => $document['timezone'], '_this' => $this ]);
            $hi2 = reset_datetime([ 'datetime' => date('H:i', strtotime('now')), 'from_format' => 'H:i', 'format' => 'H:i', 'from_timezone' => STORE_DEFAULT_TIMEZONE_ABBR, 'new_zone' => $document['timezone'], '_this' => $this ]);
            $day = reset_datetime([ 'datetime' => date('D', strtotime('now')), 'from_format' => 'D', 'format' => 'D', 'from_timezone' => STORE_DEFAULT_TIMEZONE_ABBR, 'new_zone' => $document['timezone'], '_this' => $this ]);
            $n = reset_datetime([ 'datetime' => date('N', strtotime('now')), 'from_format' => 'D', 'format' => 'D', 'from_timezone' => STORE_DEFAULT_TIMEZONE_ABBR, 'new_zone' => $document['timezone'], '_this' => $this ]);
            // 
            $fd = '';
            $ft = '';
            //
            if(!empty($document['assign_time'])){
                $document['assign_time'] = DateTime::createFromFormat('h:i A', $document['assign_time'])->format('H:i');
            }
            //
            // $hi2 = '06:00';
            // $n = 1;
            //
            $employees = null;
            //
            if(!empty($document['assigned_employee_list'])) if($document['assigned_employee_list'] != 'all') $employees = json_decode($document['assigned_employee_list'], true);
            //
            switch ($document['assign_type']) {
                case 'weekly':
                    $yes = false;
                    //
                    $document['assign_date'] = $dates[$document['assign_date']];
                    //
                    if(!empty($document['assign_date']) && !empty($document['assign_time'])){
                        if($document['assign_date'] == $dates[$n]) if($hi2 == $document['assign_time']) $yes = true;
                    } else if(!empty($document['assign_date'])){
                        if($document['assign_date'] == $dates[$n]) $yes = true;
                    } else if(!empty($document['assign_time'])){
                        if($hi2 == $document['assign_time']) $yes = true;
                    }

                    // _e($yes, true);
                    //
                    if($yes){
                        $this->hrm->reAssignDocument(
                            $document['sid'],
                            $employees
                        );
                        continue;
                    }
                break;
                case 'monthly':
                    //
                    $yes = false;
                    //
                    // $document['assigned_date'] = '2020-10-16 00:00:00';
                    // $document['assign_time'] = '19:53';
                    // $document['assign_date'] = '16';
                    //
                    $ad = new DateTime(DateTime::createFromFormat('Y-m-d H:i:s', $document['assigned_date'])->format('Y-m-d'));
                    $cd = new DateTime(date('Y-m-d', strtotime('now')));
                    $int = $ad->diff($cd)->days;
                    //
                    if(!empty($document['assign_date']) && !empty($document['assign_time'])){
                        if($int > 29 && $d == $document['assign_date'] && $document['assign_time'] == $hi2) $yes = true;
                    } else if(!empty($document['assign_date'])) {
                        if( $int > 29 && $d == $document['assign_date']) $yes = true;
                    } else if(!empty($document['assign_time'])){
                        if($document['assign_time'] == $hi2) $yes = true;
                    }
                    
                    if($yes){

                        $this->hrm->reAssignDocument(
                            $document['sid'],
                            $employees
                        );
                        continue;
                    }
                break;
                case 'yearly':
                case 'custom':
                    //
                    $yes = false;
                    //
                    // $document['assigned_date'] = '2019-10-16 00:00:00';
                    // $document['assign_time'] = '19:53';
                    // $document['assign_date'] = '16';
                    //
                    $ad = new DateTime(DateTime::createFromFormat('Y-m-d H:i:s', $document['assigned_date'])->format('Y-m-d'));
                    $cd = new DateTime(date('Y-m-d', strtotime('now')));
                    $int = $ad->diff($cd)->y;
                    //
                    $t = explode('/', $document['assign_date']);
                    //
                    $am = $t[0];
                    $ad = $t[1];
                    //
                    if(!empty($document['assign_date']) && !empty($document['assign_time'])){
                        if($int >= 1 && $d == $ad && $m == $am && $document['assign_time'] == $hi2) $yes = true;
                    } else if(!empty($document['assign_date'])) {
                        if($int >= 1 && $d == $ad && $m == $am ) $yes = true;
                    } else if(!empty($document['assign_time'])){
                        if($document['assign_time'] == $hi2) $yes = true;
                    }
                    
                    if($yes){

                        $this->hrm->reAssignDocument(
                            $document['sid'],
                            $employees
                        );
                        continue;
                    }
                break;
                case "daily":
                    //
                    // $document['assigned_date'] = '2020-11-15 00:00:00';
                    // $document['assign_time'] = '13:06';
                    $ad = new DateTime(DateTime::createFromFormat('Y-m-d H:i:s', $document['assigned_date'])->format('Y-m-d'));
                    $cd = new DateTime(date('Y-m-d', strtotime('now')));
                    //
                    $int = $ad->diff($cd)->days;
                    
                    //
                    if($int >= 1 && $hi2 == $document['assign_time']) {
                        $this->hrm->reAssignDocument(
                            $document['sid'],
                            $employees
                        );
                    }
                break;
            }
            }
        exit(0);
    }

}