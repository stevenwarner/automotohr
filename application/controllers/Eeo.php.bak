<?php defined('BASEPATH') OR exit('No direct script access allowed');

class Eeo extends Public_Controller
{
    public function __construct()
    {
        parent::__construct();
        $this->load->model('eeo_model');
        $this->load->library('pagination');
    }

    public function index($keyword = 'all', $opt_type = 'no', $start_date = null, $end_date = null)
    {
        if ($this->session->userdata('logged_in')) {
            $data['session'] = $this->session->userdata('logged_in');
            $security_sid = $data['session']['employer_detail']['sid'];
            $security_details = db_get_access_level_details($security_sid);
            $data['security_details'] = $security_details;
            check_access_permissions($security_details, 'my_settings', 'eeo'); // Param2: Redirect URL, Param3: Function Name
            $company_id = $data['session']['company_detail']['sid'];
            $keyword = urldecode($keyword);

            $display_start_day = '';
            $display_end_day = '';

            if ($start_date != null && $start_date != 'all') {
                $display_start_day = $start_date;
                $start_date = DateTime::createFromFormat('m-d-Y', $start_date)->format('Y-m-d 00:00:00');
            } else {
                $start_date = new DateTime();
                $display_start_day = $start_date->format('m-01-Y');
                $start_date = $start_date->format('Y-m-1 00:00:00');
            }

            if ($end_date != null && $end_date != 'all') {
                $display_end_day = $end_date;
                $end_date = DateTime::createFromFormat('m-d-Y', $end_date)->format('Y-m-d 23:59:59');
            } else {
                $end_date = new DateTime();
                $display_end_day = $end_date->format('m-t-Y');
                $end_date = $end_date->format('Y-m-t 23:59:59');
            }

            $records_per_page = PAGINATION_RECORDS_PER_PAGE;
            $page = ($this->uri->segment(6)) ? $this->uri->segment(6) : 0;
            $my_offset = 0;

            if ($page > 1) {
                $my_offset = ($page - 1) * $records_per_page;
            }



            $total_records = $this->eeo_model->get_all_eeo_applicants($keyword, $opt_type, $start_date, $end_date, $company_id, $records_per_page, $my_offset, true);
            $eeo_candidates = $this->eeo_model->get_all_eeo_applicants($keyword, $opt_type, $start_date, $end_date, $company_id, $records_per_page, $my_offset);
            $data['eeo_candidates'] = $eeo_candidates;

            $start_date = DateTime::createFromFormat('Y-m-d H:i:s', $start_date)->format('m-d-Y');
            $end_date = DateTime::createFromFormat('Y-m-d H:i:s', $end_date)->format('m-d-Y');

            $baseUrl = base_url('eeo') . '/' . urlencode($keyword) . '/' . $opt_type . '/' . urlencode($start_date) . '/' . urlencode($end_date);

            $uri_segment = 6;

            $config = array();
            $config['base_url'] = $baseUrl;
            $config['total_rows'] = $total_records;
            $config['per_page'] = $records_per_page;
            $config['uri_segment'] = $uri_segment;
            $config['num_links'] = 4;
            $config['use_page_numbers'] = true;
            $config['full_tag_open'] = '<nav class="hr-pagination"><ul>';
            $config['full_tag_close'] = '</ul></nav><!--pagination-->';
            $config['first_link'] = '&laquo; First';
            $config['first_tag_open'] = '<li class="prev page">';
            $config['first_tag_close'] = '</li>';
            $config['last_link'] = 'Last &raquo;';
            $config['last_tag_open'] = '<li class="next page">';
            $config['last_tag_close'] = '</li>';
            $config['next_link'] = '<i class="fa fa-angle-right"></i>';
            $config['next_tag_open'] = '<li class="next page">';
            $config['next_tag_close'] = '</li>';
            $config['prev_link'] = '<i class="fa fa-angle-left"></i>';
            $config['prev_tag_open'] = '<li class="prev page">';
            $config['prev_tag_close'] = '</li>';
            $config['cur_tag_open'] = '<li class="active"><a href="">';
            $config['cur_tag_close'] = '</a></li>';
            $config['num_tag_open'] = '<li class="page">';
            $config['num_tag_close'] = '</li>';
            $this->pagination->initialize($config);

            $data['links'] = $this->pagination->create_links();

            $data['current_page'] = $page;
            $data['from_records'] = $my_offset == 0 ? 1 : $my_offset;
            $data['to_records'] = $total_records < $records_per_page ? $total_records : $my_offset + $records_per_page;
            $data['total_records'] = $total_records;

            $data['title'] = 'EEO form Applicants';

            $data['keyword'] = $keyword;
            $data['startdate'] = $display_start_day;
            $data['enddate'] = $display_end_day;
            $data['opt_type'] = $opt_type;

            $this->load->view('main/header', $data);
            $this->load->view('manage_employer/eeo_applicants_new');
            $this->load->view('main/footer');
        } else {
            redirect(base_url('login'), "refresh");
        }
    }

    public function export_excel()
    {
        if ($this->session->userdata('logged_in')) {
            $data['session'] = $this->session->userdata('logged_in');
            $security_sid = $data['session']['employer_detail']['sid'];
            $security_details = db_get_access_level_details($security_sid);
            $data['security_details'] = $security_details;
            check_access_permissions($security_details, 'my_settings', 'eeo'); // Param2: Redirect URL, Param3: Function Name
            $company_id = $data['session']['company_detail']['sid'];

            $keyword = $_POST['keyword'] ;
            $start_date = $_POST['startdate'];
            $end_date = $_POST['enddate'];
            $opt_type = $_POST['opt_type'];

            $keyword = empty($keyword) ? 'all' : $keyword;
            $start_date = empty($start_date) ? 'all' : $start_date;
            $end_date = empty($end_date) ? 'all' : $end_date;
            $opt_type = empty($opt_type) ? 'all' : $opt_type;

            $display_start_day = 'all';
            $display_end_day = 'all';

            if ($start_date != null && $start_date != 'all') {
                $display_start_day = $start_date;
                $start_date = DateTime::createFromFormat('m-d-Y', $start_date)->format('Y-m-d 00:00:00');
            } else {
                $start_date = new DateTime();
                $display_start_day = $start_date->format('m-01-Y');
                $start_date = $start_date->format('Y-m-1 00:00:00');
            }

            if ($end_date != null && $end_date != 'all') {
                $display_end_day = $end_date;
                $end_date = DateTime::createFromFormat('m-d-Y', $end_date)->format('Y-m-d 23:59:59');
            } else {
                $end_date = new DateTime();
                $display_end_day = $end_date->format('m-t-Y');
                $end_date = $end_date->format('Y-m-t 23:59:59');
            }

            $eeo_candidates = $this->eeo_model->get_all_eeo_applicants($keyword, $opt_type, $start_date, $end_date, $company_id, null, 0, false);

            header('Content-Type: text/csv; charset=utf-8');
            header('Content-Disposition: attachment; filename=eeoreport_' . $opt_type . '-' . date('Y-m-d-H-i-s') . '.csv');

            $output = fopen('php://output', 'w');

            fputcsv($output, array('Name', 'Opt Out', 'Date', 'IP Address', 'US Citizen', 'Visa Status', 'Group Status', 'Veteran', 'Disability', 'Gender', 'Applicant Type', 'Applicant Source'));

            if (sizeof($eeo_candidates) > 0) {
                foreach ($eeo_candidates as $candidate) {
                    $input = array();
                    $input['name'] = ucwords($candidate['first_name']) . ' ' . ucwords($candidate['last_name']);
                    $input['opt_out'] = ucwords($opt_type);
                    $input['date_applied'] = date_with_time($candidate['date_applied']);
                    $input['ip_address'] = $candidate['ip_address'];
                    $input['us_citizen'] = $candidate['us_citizen'];
                    $input['visa_status'] = $candidate['visa_status'];
                    $input['group_status'] = $candidate['group_status'];
                    $input['veteran'] = $candidate['veteran'];
                    $input['disability'] = $candidate['disability'];
                    $input['gender'] = $candidate['gender'];
                    $input['applicant_type'] = $candidate['applicant_type'];
                    $input['applicant_source'] = $candidate['applicant_source'];
                    fputcsv($output, $input);
                }
                // insert into the csv export file
            }


            if ($keyword != null) {
                $keyword = urlencode($keyword);
            } else {
                $keyword = 'all';
            }

            redirect(base_url('eeo') . '/' . $keyword . '/' . $opt_type . '/' . $display_start_day . '/' . $display_end_day, "refresh");
        } else {
            redirect(base_url('login'), 'refresh');
        }
    }

    public function get_all_candidates($company_id, $records_per_page = null, $my_offset = null)
    {
        $manual_candidates_query = $this->eeo_model->get_eeo_candidates($company_id, $records_per_page, $my_offset);
        $eeo_candidates = array();

        if (sizeof($manual_candidates_query) > 0) {
            foreach ($manual_candidates_query as $manual_row) {
                $manual_job_title = $this->eeo_model->get_job_title_by_type($manual_row['job_sid'], $manual_row['applicant_type'], $manual_row['desired_job_title']);

                if (isset($manual_row['eeo_form']) && $manual_row['eeo_form'] == 'Yes') {
                    $eeo_candidates[] = array(
                        "sid" => $manual_row['applicant_sid'],
                        "job_sid" => $manual_row['job_sid'],
                        "Title" => $manual_job_title,
                        "first_name" => $manual_row['first_name'],
                        "last_name" => $manual_row['last_name'],
                        "eeo_form" => $manual_row['eeo_form'],
                        "application_sid" => $manual_row['application_sid'],
                        "us_citizen" => $manual_row['us_citizen'],
                        "visa_status" => $manual_row['visa_status'],
                        "group_status" => $manual_row['group_status'],
                        "veteran" => $manual_row['veteran'],
                        "disability" => $manual_row['disability'],
                        "gender" => $manual_row['gender'],
                        "date_applied" => $manual_row['date_applied']);
                } else {
                    $eeo_candidates[] = array(
                        "sid" => $manual_row['applicant_sid'],
                        "job_sid" => $manual_row['job_sid'],
                        "Title" => $manual_job_title,
                        "first_name" => $manual_row['first_name'],
                        "last_name" => $manual_row['last_name'],
                        "eeo_form" => $manual_row['eeo_form'],
                        "date_applied" => $manual_row['date_applied']);
                }
            }
        }
        return $eeo_candidates;
    }
}