<?php
class card_expiry_model extends CI_Model {
    function __construct() {
        parent::__construct();
    }

    function get_active($type,$limit = null, $start = null){
        $this->db->select('users.CompanyName,emp_cards.expire_month,emp_cards.expire_year,emp_cards.type,emp_cards.number,emp_cards.name_on_card');
        $this->db->where('emp_cards.active',$type);
        // Updated on: 22-04-2019
        if($type == 1)
            $this->db->where('emp_cards.is_default', 1);
        if($type == 0){
            $this->db->where('concat(emp_cards.expire_year,"-",emp_cards.expire_month) <= ', date('Y-m'));
        }
        if($limit != null){
            $this->db->limit($limit, $start);
        }
       // $this->db->group_by('emp_cards.employer_sid');
        $this->db->join('users','users.sid = emp_cards.company_sid','left');
        $this->db->from('emp_cards');
        // Recurring payment check
        // must exists in recurring payment table
        // with status 'active'
        $this->db->where('recurring_payments.status', 'active');
        $this->db->join('recurring_payments','recurring_payments.company_sid = emp_cards.company_sid','inner');

        $records_obj = $this->db->get();
        $records_arr = $records_obj->result_array();
        $records_obj->free_result();
        return $records_arr;
    }

    function get_active_count($type){
        $this->db->select('users.CompanyName,emp_cards.expire_month,emp_cards.expire_year,emp_cards.type,emp_cards.number,emp_cards.name_on_card');
        $this->db->where('emp_cards.active',$type);
        // Updated on: 22-04-2019
        $this->db->where('emp_cards.is_default', 1);
        $this->db->join('users','users.sid = emp_cards.company_sid','left');
        $this->db->from('emp_cards');
        // Recurring payment check
        // must exists in recurring payment table
        // with status 'active'
        $this->db->where('recurring_payments.status', 'active');
        $this->db->join('recurring_payments','recurring_payments.company_sid = emp_cards.company_sid','inner');
        $count = $this->db->count_all_results();
        return $count;
    }

    function expiring_in_month($current_month,$current_year,$limit = null, $start = null){
        $this->db->select('users.CompanyName,emp_cards.expire_month,emp_cards.expire_year,emp_cards.type,emp_cards.number,emp_cards.name_on_card');
        $this->db->where('emp_cards.active',1);
        // $this->db->where('emp_cards.expire_month',$current_month+1);
        // $this->db->where('emp_cards.expire_year',$current_year);
        $this->db->where('concat(emp_cards.expire_year,"-",emp_cards.expire_month) ', date('Y-m', strtotime('+1 month')));
        // Updated on: 22-04-2019
        $this->db->where('emp_cards.is_default', 1);
        if($limit != null){
            $this->db->limit($limit, $start);
        }
        $this->db->join('users','users.sid = emp_cards.company_sid','left');
        $this->db->from('emp_cards');
        // Recurring payment check
        // must exists in recurring payment table
        // with status 'active'
        $this->db->where('recurring_payments.status', 'active');
        $this->db->join('recurring_payments','recurring_payments.company_sid = emp_cards.company_sid','inner');
        $records_obj = $this->db->get();
        $records_arr = $records_obj->result_array();
        $records_obj->free_result();
        return $records_arr;
    }

    function expiring_in_month_count($current_month,$current_year){
        $this->db->select('users.CompanyName,emp_cards.expire_month,emp_cards.expire_year,emp_cards.type,emp_cards.number,emp_cards.name_on_card');
        $this->db->where('emp_cards.active',1);
        // $this->db->where('emp_cards.expire_month',$current_month+1);
        // $this->db->where('emp_cards.expire_year',$current_year);
        // Updated on: 22-04-2019
        $this->db->where('concat(emp_cards.expire_year,"-",emp_cards.expire_month)', date('Y-m', strtotime('+1 month')));
        $this->db->join('users','users.sid = emp_cards.company_sid','left');
        $this->db->from('emp_cards');
        // Recurring payment check
        // must exists in recurring payment table
        // with status 'active'
        $this->db->where('recurring_payments.status', 'active');
        $this->db->join('recurring_payments','recurring_payments.company_sid = emp_cards.company_sid','inner');
        $count = $this->db->count_all_results();
        return $count;
    }
}
?>