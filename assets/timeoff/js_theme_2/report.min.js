$(function () {
  let e = [];
  $("#jsIndividualEmployees").select2({ closeOnSelect: !1 }),
    $("#jsDepartments").select2({ closeOnSelect: !1 }),
    $("#jsTeams").select2({ closeOnSelect: !1 }),
    $("#jsJobTitles").select2({ closeOnSelect: !1 }),
    $("#jsEmploymentTypes").select2({ closeOnSelect: !1 }),
    $("#jsNewHires").select2({ closeOnSelect: !1 }),
    $("#jsReportStartDate").datepicker({
      format: "m/d/y",
      changeMonth: !0,
      changeYear: !0,
      onSelect: function (e) {
        $("#jsReportEndDate").datepicker("option", "minDate", e);
      },
    }),
    $("#jsReportEndDate").datepicker({
      format: "m/d/y",
      changeMonth: !0,
      changeYear: !0,
    }),
    $(
      "#jsIndividualEmployees, #jsDepartments, #jsTeams, #jsJobTitles, #jsEmploymentTypes, #jsNewHires"
    ).change(function () {
      ml(!0, "report"), (e = []);
      let t = $("#jsIndividualEmployees").val() || [],
        l = $("#jsDepartments").val() || [],
        s = $("#jsTeams").val() || [],
        n = $("#jsJobTitles").val() || [],
        o = $("#jsEmploymentTypes").val() || [],
        a = $("#jsNewHires").val() || [],
        i = [];
      (i = _.concat(i, t)),
        employeeList.map(function (e) {
          _.intersection(e.DepartmentIds, l).length > 0 && i.push(e.sid),
            _.intersection(e.TeamIds, s).length > 0 && i.push(e.sid);
          let t,
            p =
              "" != e.job_title && null != e.job_title
                ? e.job_title
                    .replace(/[^a-zA-Z]/g, "")
                    .trim()
                    .toLowerCase()
                : "";
          -1 !== $.inArray(p, n) && i.push(e.sid),
            -1 !== $.inArray(e.employee_type, o) && i.push(e.sid),
            "" != e.joined_at && null != e.joined_at
              ? (t = moment(e.joined_at, "YYYY-MM-DD"))
              : "" != e.registration_date &&
                null != e.registration_date &&
                (t = moment(e.joined_at, "YYYY-MM-DD H:m:s")),
            ((30 == a && moment().diff(t, "days") <= 30) ||
              (60 == a && moment().diff(t, "days") <= 60) ||
              (90 == a && moment().diff(t, "days") <= 90)) &&
              i.push(e.sid);
        }),
        (i = _.uniq(i)),
        i.length > 0
          ? ((e = i),
            $(".jsReportEmployeeRow").hide(),
            i.map(function (e) {
              $('.jsReportEmployeeRow[data-id="' + e + '"]').show();
            }))
          : $(".jsReportEmployeeRow").show();
      ml(!1, "report");
    }),
    $("#jsReportClearFilter").click(function (e) {
      e.preventDefault(),
        $("#jsIndividualEmployees").select2("val", null),
        $("#jsDepartments").select2("val", null),
        $("#jsTeams").select2("val", null),
        $("#jsJobTitles").select2("val", null),
        $("#jsEmploymentTypes").select2("val", null),
        $("#jsNewHires").select2("val", 0),
        $(".jsReportEmployeeRow").show();
    }),
    $(".jsReportLink").click(function (e) {
      e.preventDefault();
      let t = $("#jsReportStartDate").val() || "all",
        l = $("#jsReportEndDate").val() || "all";
      window.open($(this).prop("href") + "?start=" + t + "&end=" + l);
    }),
    $(".jsReportLinkBulk").click(function (t) {
      t.preventDefault();
      let l = $("#jsReportStartDate").val() || "all",
        s = $("#jsReportEndDate").val() || "all";
      (sToken = $("#session_key").val()),
        window.open(
          $(this).prop("href") +
            "/" +
            (0 == e.length || e.length == employeeList.length
              ? "all"
              : e.join(",")) +
            "?start=" +
            l +
            "&end=" +
            s +
            "&token=" +
            sToken
        );
    });
});
