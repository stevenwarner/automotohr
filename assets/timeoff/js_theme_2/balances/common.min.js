let cmnOBJ={Employees:{Main:{action:"get_company_employees",companyId:companyId,employerId:employerId,employeeId:employeeId,public:0}},Policies:{Main:{action:"get_policy_list_by_company",companyId:companyId,employerId:employerId,employeeId:employeeId,public:0}}};function fetchEmployees(){$.post(handlerURL,cmnOBJ.Employees.Main,(function(resp){if(!0===resp.Redirect)return void alertify.alert("WARNING!","Your session expired. Please, re-login to continue.",()=>{window.location.reload()});if(!1===resp.Status)return window.timeoff.employees=[],void console.log("Failed to load employees.");window.timeoff.employees=resp.Data;let rows="";rows+='<option value="all">All</option>',window.timeoff.employees.map((function(v){rows+='<option value="'+v.user_id+'">'+remakeEmployeeName(v)+"</option>"})),$("#js-employee-add").html(rows),$("#js-employee-add").select2(),$("#js-employee-add").select2MultiCheckboxes({templateSelection:function(selected,total){return total--,"Selected "+(-1!==$.inArray("all",$("#js-employee-add").val())?total:selected.length)+" of "+total}}),$("#js-employee-edit").html(rows),$("#js-employee-reset").html(rows),$("#js-filter-employee").html(rows),$("#js-filter-employee").select2()}))}function fetchPolicies(){$.post(handlerURL,cmnOBJ.Policies.Main,(function(resp){if(!0===resp.Redirect)return void alertify.alert("WARNING!","Your session expired. Please, re-login to continue.",()=>{window.location.reload()});if(!1===resp.Status)return console.log("Failed to load employees."),void $('.jsIPLoader[data-page="balance"]').hide(0);let rows="";rows+='<option value="all">All</option>',resp.Data.map((function(v){rows+=`<option value="${v.policy_id}">${v.policy_title}</option>`})),$("#js-filter-policies").html(rows),$("#js-filter-policies").select2()}))}function getImportHTML(){return'\n        <div class="row">\n            <div class="col-sm-12">\n                <div style="background-color: #eee; padding: 10px;">\n                    <h4><strong>The CSV file should be in the below format</strong></h4>\n                    <h5><strong>Employee Email, Consumed Hours, Policy</strong></h5>\n                    <p>john.doe@automotohr.com, 20, Vacation</p>\n                    <p>john.smith@automotohr.com, 80, PTO</p>\n                </div>\n            </div>\n        </div>\n        <hr />\n        <div class="row">\n            <div class="col-sm-12">\n                <label>Select a file <span class="cs-required">*</span></label>\n                <input type="file" id="jsImportFile" class="hidden" />\n            </div>\n        </div>\n        <hr />\n        <div class="row">\n            <div class="col-sm-12">\n                <button class="btn btn-success dn jsStartImport">Start Import</button>\n            </div>\n        </div>\n    '}function getFileContent(fileOBJ){const reader=new FileReader;reader.onload=startImportProcess,reader.readAsText(fileOBJ)}function startImportProcess(file){let indexes=file.target.result.split(/\n/g)[0].split(","),newIndexes=[],is_error=!1;if(indexes.map(index=>{if(!is_error){if(!1===(index=getIndex(index.trim())))return is_error=!0,void alertify.alert("ERROR!","The file content doesn't match with the content sample format.",()=>{});newIndexes.push(index)}}),1==is_error)return;let pushArray=[],values;file.target.result.split(/\n/g).map((v,i)=>{if(0==i)return;let newVal=v.split(",");if(""==newVal[0]||""==newVal[1]||""==newVal[2])return;let t={};t[newIndexes[0]]=newVal[0],t[newIndexes[1]]=newVal[1],t[newIndexes[2]]=newVal[2],pushArray.push(t)}),0!==pushArray.length?(ml(!0,"importBalanceLoader"),$.post(handlerURL,{action:"import_balance",companyId:companyId,employerId:employerId,employeeId:employeeId,data:pushArray},resp=>{alertify.alert("SUCCESS","Balance is successfully imported",()=>{window.location.reload()})})):alertify.alert("WARNING!","No data found to import.",()=>{})}function getIndex(index){return index=index.replace(/[^a-zA-Z]/gi,"").toLowerCase(),-1!==$.inArray(index,["employeeemail","email","emailladdress"])?"email":-1!==$.inArray(index,["hours","consumed","consumedhours"])?"hours":-1!==$.inArray(index,["policy","title","policytitle"])&&"policy"}fetchEmployees(),fetchPolicies(),$(document).on("click",".jsExpandBalance",(function(e){e.preventDefault(),$(this).find("i").hasClass("fa-plus-circle")?$(this).find("i").removeClass("fa-plus-circle").addClass("fa-minus-circle"):$(this).find("i").removeClass("fa-minus-circle").addClass("fa-plus-circle"),$(`#${$(this).data("target")}`).toggle()})),$(".jsImportBalance").click(e=>{e.preventDefault(),Modal({Id:"importBalance",Title:"Import consumed balance for previous years",Body:getImportHTML(),Loader:"importBalanceLoader",Buttons:['<button class="btn btn-success dn jsStartImport">Start Import</button>']},()=>{$("#jsImportFile").mFileUploader({allowedTypes:["csv"],limit:-1}),$(".jsStartImport").removeClass("dn"),ml(!1,"importBalanceLoader")})}),$(document).on("click",".jsStartImport",(function(e){e.preventDefault();let fileOBJ=$("#jsImportFile").mFileUploader("get");void 0!==fileOBJ.name?!0!==fileOBJ.hasError?getFileContent(fileOBJ):alertify.alert("WARNING!","Please, use a correct file format to import.",()=>{}):alertify.alert("WARNING!","Please, select a file to import.",()=>{})}));