let cmnOBJ={Employees:{Main:{action:"get_company_employees",companyId:companyId,employerId:employerId,employeeId:employeeId,public:0}},Policies:{Main:{action:"get_policy_list_by_company",companyId:companyId,employerId:employerId,employeeId:employeeId,public:0}}};function fetchEmployees(){$.post(handlerURL,cmnOBJ.Employees.Main,(function(e){if(!0===e.Redirect)return void alertify.alert("WARNING!","Your session expired. Please, re-login to continue.",(()=>{window.location.reload()}));if(!1===e.Status)return window.timeoff.employees=[],void $('.jsIPLoader[data-page="balance"]').hide(0);window.timeoff.employees=e.Data;let t="";t+='<option value="all">All</option>',window.timeoff.employees.map((function(e){let o="";"1"===e.terminated_status?o=" - Terminated":"0"===e.active&&(o=" - Deactivated"),t+='<option value="'+e.user_id+'">'+remakeEmployeeName(e)+o+"</option>"})),$("#js-employee-add").html(t),$("#js-employee-add").select2(),$("#js-employee-add").select2MultiCheckboxes({templateSelection:function(e,t){return t--,"Selected "+(-1!==$.inArray("all",$("#js-employee-add").val())?t:e.length)+" of "+t}}),$("#js-employee-edit").html(t),$("#js-employee-reset").html(t),$("#js-filter-employee").html(t),$("#js-filter-employee").select2()}))}function fetchPolicies(){$.post(handlerURL,cmnOBJ.Policies.Main,(function(e){if(!0===e.Redirect)return void alertify.alert("WARNING!","Your session expired. Please, re-login to continue.",(()=>{window.location.reload()}));if(!1===e.Status)return void $('.jsIPLoader[data-page="balance"]').hide(0);let t="";t+='<option value="all">All</option>',e.Data.map((function(e){t+=`<option value="${e.policy_id}">${e.policy_title}</option>`})),$("#js-filter-policies").html(t),$("#js-filter-policies").select2()}))}function getImportHTML(){return'\n        <div class="row">\n            <div class="col-sm-12">\n                <div style="background-color: #eee; padding: 10px;">\n                    <h4><strong>The CSV file should be in the below format</strong></h4>\n                    <h5><strong>Employee Email, Consumed Hours, Policy</strong></h5>\n                    <p>john.doe@automotohr.com, 20, Vacation</p>\n                    <p>john.smith@automotohr.com, 80, PTO</p>\n                </div>\n            </div>\n        </div>\n        <hr />\n        <div class="row">\n            <div class="col-sm-12">\n                <label>Select a file <span class="cs-required">*</span></label>\n                <input type="file" id="jsImportFile" class="hidden" />\n            </div>\n        </div>\n        <hr />\n        <div class="row">\n            <div class="col-sm-12">\n                <button class="btn btn-success dn jsStartImport">Start Import</button>\n            </div>\n        </div>\n    '}function getFileContent(e){const t=new FileReader;t.onload=startImportProcess,t.readAsText(e)}function startImportProcess(e){let t=e.target.result.split(/\n/g)[0].split(","),o=[],l=!1;if(t.map((e=>{if(!l){if(!1===(e=getIndex(e.trim())))return l=!0,void alertify.alert("ERROR!","The file content doesn't match with the content sample format.",(()=>{}));o.push(e)}})),1==l)return;let i=[];e.target.result.split(/\n/g).map(((e,t)=>{if(0==t)return;let l=e.split(",");if(""==l[0]||""==l[1]||""==l[2])return;let a={};a[o[0]]=l[0],a[o[1]]=l[1],a[o[2]]=l[2],i.push(a)})),0!==i.length?(ml(!0,"importBalanceLoader"),$.post(handlerURL,{action:"import_balance",companyId:companyId,employerId:employerId,employeeId:employeeId,data:i},(e=>{alertify.alert("SUCCESS","Balance is successfully imported",(()=>{window.location.reload()}))}))):alertify.alert("WARNING!","No data found to import.",(()=>{}))}function getIndex(e){return e=e.replace(/[^a-zA-Z]/gi,"").toLowerCase(),-1!==$.inArray(e,["employeeemail","email","emailladdress"])?"email":-1!==$.inArray(e,["hours","consumed","consumedhours"])?"hours":-1!==$.inArray(e,["policy","title","policytitle"])&&"policy"}fetchEmployees(),$(document).on("click",".jsExpandBalance",(function(e){e.preventDefault(),$(this).find("i").hasClass("fa-plus-circle")?$(this).find("i").removeClass("fa-plus-circle").addClass("fa-minus-circle"):$(this).find("i").removeClass("fa-minus-circle").addClass("fa-plus-circle"),$(`#${$(this).data("target")}`).toggle()})),$(".jsImportBalance").click((e=>{e.preventDefault(),Modal({Id:"importBalance",Title:"Import consumed balance for previous years",Body:getImportHTML(),Loader:"importBalanceLoader",Buttons:['<button class="btn btn-success dn jsStartImport">Start Import</button>']},(()=>{$("#jsImportFile").mFileUploader({allowedTypes:["csv"],limit:-1}),$(".jsStartImport").removeClass("dn"),ml(!1,"importBalanceLoader")}))})),$(document).on("click",".jsStartImport",(function(e){e.preventDefault();let t=$("#jsImportFile").mFileUploader("get");void 0!==t.name?!0!==t.hasError?getFileContent(t):alertify.alert("WARNING!","Please, use a correct file format to import.",(()=>{})):alertify.alert("WARNING!","Please, select a file to import.",(()=>{}))}));