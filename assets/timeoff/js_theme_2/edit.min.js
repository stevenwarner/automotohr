$((function(){let selectedRequestId=0,selectedEmployeeId=0,oldTime=0,cOBJ={policyId:0,startDate:0,endDate:0,dateRows:"",status:0,reason:0,comment:0,sendEmailNotification:0,fromAdmin:1};function getModalBody(type){return new Promise(res=>{$.post(handlerURL,{action:"get_modal",companyId:companyId,employerId:employerId,employeeId:employeeId,type:type,formLMS:null!==window.location.pathname.match(/(lms)|(create_employee)|(employee_management_system)|(dashboard)/gi)?1:0},resp=>{res(resp)})})}function getEmployeePolicies(employeeId){return new Promise(res=>{$.post(handlerURL,{action:"get_employee_policies_with_approvers",companyId:companyId,employerId:employerId,employeeId:employeeId},resp=>{res(resp)})})}function getRequestById(requestId){return new Promise(res=>{$.post(handlerURL,{action:"get_request_by_id",companyId:companyId,employerId:employerId,employeeId:selectedEmployeeId,requestId:requestId},resp=>{res(resp)})})}function getSideBarPolicies(){$(".jsAsOfTodayPolicies").html(""),$.post(handlerURL,{action:"get_employee_policies_by_date",companyId:companyId,employerId:employerId,employeeId:selectedEmployeeId,fromDate:$("#jsStartDateEdit").val()},resp=>{window.timeoff.cPolicies=resp.Data,$(".jsEditTimeOffBTN").prop("disabled",!1),$("#jsEndDateEdit").prop("disabled",!1),$("#jsAddPolicyEdit").prop("disabled",!1);let newPolicies=[];if(resp.Data.length>0){let rows="";resp.Data.map(policy=>{""==policy.Reason&&(newPolicies.push(policy),rows+=`\n                        <div class="p10">\n                        <strong>${policy.Title}</strong>\n                        <br />\n                        <span>Remaining Time: ${0==policy.AllowedTime.M.minutes&&""==policy.Reason?"Unlimited":policy.RemainingTime.text}</span>\n                        <br />\n                        <span>Scheduled Time: ${0==policy.AllowedTime.M.minutes&&""==policy.Reason?"Unlimited":policy.ConsumedTime.text}</span>\n                        <br />\n                        <span>Employement Status: ${ucwords(policy.EmployementStatus)}</span>  \n                        </div>\n                        <hr />\n                        `)}),window.timeoff.cPolicies=newPolicies,$("#jsAsOfTodayPolicies").html(rows)}0==window.timeoff.cPolicies.length&&($("#jsAsOfTodayPolicies").html('<div class="alert alert-success">No policies found.</div>'),$(".jsEditTimeOffBTN").prop("disabled",!0),$("#jsEndDateEdit").prop("disabled",!0),$("#jsAddPolicyEdit").prop("disabled",!0))})}function unavailable(date){var checkOffDays=void 0===policyOffDays?timeOffDays:policyOffDays,dmy=moment(date).format("MM-DD-YYYY");let d=moment(date).format("dddd").toString().toLowerCase(),t=1;return t=-1!==$.inArray(d,checkOffDays)?{work_on_holiday:0,holiday_title:"Weekly off"}:inObject(dmy,holidayDates),-1==t?[!0,""]:1==t.work_on_holiday?[!0,"set_disable_date_color",t.holiday_title]:[!1,"",t.holiday_title]}function setApproversView(approvers,history){if(0===approvers.length)return $("#jsApproversListingEdit").html("<p>No approvers found.</p>"),void $("#jsApproversListingNoteEdit").hide();let rows="",mRows="";approvers.map(approver=>{let a=getApproverAction(approver.userId,history);0==a.length&&(a[0]=" - waiting for approval",a[1]="waiting");let msg=`${remakeEmployeeName(approver)} ${a[0]}`;rows+=`\n            <div class="csApproverBox" title="Approver" data-content="${msg}">\n            <img src="${null==approver.profile_picture||""==approver.profile_picture?awsURL+"test_file_01.png":awsURL+approver.profile_picture}" />\n            <i class="fa fa-${"approved"==a[1]?"check-circle text-success":"rejected"==a[1]?"times-circle text-danger":"clock-o"}"></i>\n            </div>\n            `,mRows+=`\n            <div class="csApproverBox">\n                <div class="employee-info">            \n                    <figure>                \n                        <img src="${null==approver.profile_picture||""==approver.profile_picture?awsURL+"test_file_01.png":awsURL+approver.profile_picture}" />  \n                        <i class="fa fa-${"approved"==a[1]?"check-circle text-success":"rejected"==a[1]?"times-circle text-danger":"clock-o"}"></i>        \n                    </figure>            \n                    <div class="text">                \n                        <h4>${msg}</h4>                \n                        <p><a href="http://automotohr.local/employee_profile/${approver.userId}" target="_blank">Id: ${getEmployeeId(approver.userId,approver.employee_number)}</a></p>            \n                    </div>        \n                </div>\n            </div>\n        `}),$("#jsApproversListingEdit").html(rows),$("#jsApproversListingMobileEdit").html(mRows),$("#jsApproversListingNoteEdit").show(),$(".csApproverBox").popover({html:!0,trigger:"hover",placement:"top"})}function setHistoryView(history){let rows="";0==history.length?rows='<p class="alert alert-info text-center">No History found</p>':history.map(v=>{let note=JSON.parse(v.note),act="",comment="-";"create"==v.action?act="Created time-off.":(void 0!==note.status?("archive"==note.status?act="Marked time-off as archive.":"activate"==note.status?act="Marked time-off as active.":"approved"==note.status&&1==note.canApprove?act="Approved time-off 100%.":"approved"==note.status&&0==note.canApprove?act="Approved time-off 50%.":"rejected"==note.status&&1==note.canApprove?act="Rejected time-off 100%.":"rejected"==note.status&&0==note.canApprove?act="Rejected time-off 50%.":"pending"==note.status&&0==note.canApprove?act="Updated time-off.":"cancelled"==note.status&&(act="Canceled time-off."),null!=note.comment&&""!=note.comment&&(comment=note.comment)):act="","update"==v.action&&""==act&&(act="Time-off updated.")),rows+='        <div class="employee-info">',rows+="            <figure>",rows+=`                <img src="${getImageURL(v.image)}" class="img-circle emp-image" />`,rows+="            </figure>",rows+='            <div class="text">',rows+=`                <h4>${v.first_name} ${v.last_name} </h4>`,rows+=`                <p>${remakeEmployeeName(v,!1)}</p>`,rows+=`                <p><a href="${baseURL}employee_profile/${v.userId}" target="_blank">Id: ${getEmployeeId(v.userId,v.employee_number)}</a></p>`,rows+="            </div>",rows+="        </div>",rows+=`<p>${act}</p>`,rows+=`<p>Action Taken: ${moment(v.created_at).format(timeoffDateFormatWithTime)}</p>`,rows+=`<p>${comment}</p><hr />`}),$(".jsHistoryBox").html(rows)}function getApproverAction(approverId,history){if(0==history.length)return"";let row=[];return history.map(v=>{if(0!=row.length)return"";if(v.userId!=approverId)return"";if("create"==v.action)return"";if("{}"==v.note)return"";let action=JSON.parse(v.note);if(null==action.canApprove)return"";"approved"==action.status?(row[0]=` has approved the time-off at ${moment(v.created_at).format(timeoffDateFormatWithTime)}`,row[1]="approved"):"rejected"==action.status&&(row[0]=` has rejected the time-off at ${moment(v.created_at).format(timeoffDateFormatWithTime)}`,row[1]="rejected")}),row}function getSelectedPolicy(policyId){if(0===window.timeoff.cPolicies.length)return[];let selectedPolicy=[];return window.timeoff.cPolicies.map(policy=>{policy.PolicyId==policyId&&(selectedPolicy=policy)}),selectedPolicy}function fetchCompanyEmployees(){return new Promise(res=>{$.post(handlerURL,{action:"get_company_employees",companyId:companyId,employerId:employerId,employeeId:selectedEmployeeId},resp=>{res(resp)})})}$(document).on("click",".jsEditTimeOffBTN",(function(e){let policy;if(e.preventDefault(),policyOffDays=void 0,0==getSelectedPolicy(getField("#jsEditPolicy")).length)return void alertify.alert("WARNING!","You don't have any policies. Please select a different date.",()=>{});if(cOBJ.policyId=getField("#jsEditPolicy"),cOBJ.startDate=getField("#jsStartDateEdit"),cOBJ.endDate=getField("#jsEndDateEdit"),cOBJ.status=getField("#jsStatusEdit"),cOBJ.reason=CKEDITOR.instances.jsReasonEdit.getData(),cOBJ.comment=CKEDITOR.instances.jsCommentEdit.getData(),cOBJ.sendEmailNotification=getField(".js-send-emailEdit:checked"),cOBJ.dateRows=getRequestedDays(".jsDurationBox","edit"),0==cOBJ.policyId)return void alertify.alert("WARNING!","Please select a policy.",()=>{});if(0==cOBJ.startDate)return void alertify.alert("WARNING!","Please select the start date.",()=>{});if(0==cOBJ.endDate)return void alertify.alert("WARNING!","Please select an end date.",()=>{});if((null==window.timeoff.isMine||0==window.timeoff.isMine)&&"pending"==cOBJ.status)return void alertify.alert("WARNING!","Please either approve/reject the time off.",()=>{});if(cOBJ.dateRows.error)return;let selectedPolicy=getPolicy(cOBJ.policyId,window.timeoff.cPolicies);if(null==selectedPolicy.OffDays?policyOffDays=void 0:policyOffDays=selectedPolicy.OffDays.split(","),0==selectedPolicy.IsUnlimited){if(selectedPolicy.RemainingTimeWithNegative.M.minutes<=0)return void alertify.alert("WARNING!","You don't have any time left against this policy.",()=>{});if(cOBJ.dateRows.totalTime>selectedPolicy.RemainingTimeWithNegative.M.minutes)return void alertify.alert("WARNING!",`Requested time-off can not be greater than the allowed time i.e. "${selectedPolicy.RemainingTimeWithNegative.text}"`,()=>{})}cOBJ.fromAdmin=1,null!==window.location.pathname.match(/(dashboard)/gi)&&(cOBJ.fromAdmin=0),cOBJ.requestId=selectedRequestId,ml(!0,"editModalLoader"),$.post(handlerURL,Object.assign({action:"update_timeoff",companyId:companyId,employerId:employerId,employeeId:selectedEmployeeId},cOBJ),resp=>{if(!1===resp.Status)return ml(!1,"editModalLoader"),void alertify.alert("WARNING!",resp.Response,()=>{});ml(!1,"editModalLoader"),alertify.alert("SUCCESS!",resp.Response,()=>{$(".jsModalCancel").removeAttr("data-ask"),$(".jsModalCancel").trigger("click"),window.location.reload()})})})),$(document).on("click",".jsEditTimeOff",(function(e){e.preventDefault(),console.log($(this).closest(".jsBox").data());let requestId=$(this).closest(".jsBox").data("id"),employeeId=$(this).closest(".jsBox").data("userid"),status=$(this).closest(".jsBox").data("status"),view=$(this).closest(".jsBox").data("view");selectedRequestId=requestId,selectedEmployeeId=employeeId,timeRowsOBJEdit={},Modal({Id:"editModal",Title:`Edit Time off for ${$(this).closest(".jsBox").data("name")}`,Body:"",Buttons:['<button class="btn btn-orange btn-theme jsCreateTimeOffBalanceEdit" style="margin-right: 10px;" title="See employee balance" placement="left"><i class="fa fa-balance-scale" aria-hidden="true"></i>&nbsp;View Balance History</button>','<button class="btn btn-black jsCreateTimeOffBalanceBackEdit dn" style="margin-right: 10px;" ><i class="fa fa-long-arrow-left" aria-hidden="true"></i>&nbsp;Back To Create</button>',`<a class="btn btn-orange" target="_blank" style="margin-right: 5px; margin-top: -5px;" href="${baseURL}timeoff/print/requests/${requestId}"><i class="fa fa-print"></i> Print</a>`,`<a class="btn btn-orange" target="_blank" style="margin-right: 5px; margin-top: -5px;" href="${baseURL}timeoff/download/requests/${requestId}"><i class="fa fa-download"></i> Download</a>`,"cancelled"==status||1==view?"":'<button class="btn btn-orange jsEditTimeOffBTN">Update</button>'],Loader:"editModalLoader",Ask:!1},async()=>{if("cancelled"!=status&&1!=view||$(".jsModalCancel").removeAttr("data-ask"),void 0===window.timeoff.companyEmployees){const resp1=await fetchCompanyEmployees();window.timeoff.companyEmployees=resp1.Data}const resp=await getEmployeePolicies(employeeId),policies=resp.Data.Policies,approvers=resp.Data.Approvers;if(0===policies.length)return $(".jsAddTimeOff").remove(),$("#editModal").find(".csModalBody").append('<div class="alert alert-success text-center">We are unable to find policies against this employee.</div>'),void ml(!1,"editModalLoader");const request=await getRequestById(requestId);cOBJ.policyId=request.Data.timeoff_policy_sid,cOBJ.startDate=moment(request.Data.request_from_date).format("MM/DD/YYYY"),cOBJ.endDate=moment(request.Data.request_to_date).format("MM/DD/YYYY"),cOBJ.dateRows=JSON.parse(request.Data.timeoff_days),cOBJ.status=request.Data.status,cOBJ.reason=request.Data.reason,cOBJ.comment="",cOBJ.sendEmailNotification=0,cOBJ.fromAdmin=1,oldTime=cOBJ.dateRows.totalTime;let newPolicies={};window.timeoff.cPolicies=policies,policies.map(policy=>{void 0===newPolicies[policy.Category]&&(newPolicies[policy.Category]=[]),newPolicies[policy.Category].push(policy)});let policyRows='<option value="0" selected="true">[Select a policy]</option>';$.each(newPolicies,(category,policies)=>{policyRows+=`<optgroup label="${category}">`,policies.map(policy=>{policyRows+=`<option value="${policy.PolicyId}">${policy.Title}</option>`}),policyRows+="</optgroup>"});const bodyText=await getModalBody("edit");$(".jsAddTimeOff").remove(),$("#editModal").find(".csModalBody").append(bodyText),"cancelled"!=status&&1!=view||($(".jsModalCancel").removeAttr("data-ask"),$(".jsEditTimeOffBTN").remove(),$("#jsStatusEdit").append('<option value="cancelled">Canceled</option>')),$("#jsEditPolicy").html(policyRows),$("#jsEditPolicy").select2(),$("#jsStartDateEdit").datepicker({format:"mm-dd-yyyy",changeYear:!0,changeMonth:!0,beforeShowDay:unavailable,onSelect:()=>{getSideBarPolicies(),remakeRangeRows("#jsStartDateEdit","#jsEndDateEdit",".jsDurationBox","edit")}}),$("#jsEndDateEdit").datepicker({format:"mm-dd-yyyy",changeYear:!0,changeMonth:!0,beforeShowDay:unavailable,onSelect:()=>{remakeRangeRows("#jsStartDateEdit","#jsEndDateEdit",".jsDurationBox","edit")}}),$("#js-vacation-return-date").datepicker({format:"mm-dd-yyyy",changeYear:!0,changeMonth:!0,minDate:1,beforeShowDay:unavailable}),$("#js-bereavement-return-date").datepicker({format:"mm-dd-yyyy",changeYear:!0,changeMonth:!0,minDate:1,beforeShowDay:unavailable}),$("#js-compensatory-return-date").datepicker({format:"mm-dd-yyyy",changeYear:!0,changeMonth:!0,minDate:1,beforeShowDay:unavailable}),$("#js-compensatory-start-time").datepicker({format:"g:i A",formatTime:"g:i A",step:15}),$("#js-compensatory-end-time").datepicker({format:"g:i A",formatTime:"g:i A",step:15}),null!==window.location.pathname.match(/(lms)|(employee_management_system)|(dashboard)/gi)&&1==window.timeoff.isMine?($("#jsCommentEdit").parent().hide(),$(".jsEmailBoxEdit").hide(),$("#jsStatusEdit").html('<option value="pending">Pending</option>').parent().hide(0),$("#jsStartDateEdit").datepicker("option","minDate",-1),$("#jsEndDatetEdit").datepicker("option","minDate",-1)):($("#jsStatusEdit").select2({minimumResultsForSearch:5}),$("#jsStatusEdit").select2("val",cOBJ.status)),CKEDITOR.config.toolbar=[["Bold","Italic","Underline"]],CKEDITOR.replace("jsReasonEdit"),$("#jsCommentEdit").length>0&&CKEDITOR.replace("jsCommentEdit"),$("#jsEditPolicy").select2("val",cOBJ.policyId),$("#jsStartDateEdit").val(cOBJ.startDate),$("#jsEndDateEdit").val(cOBJ.endDate),CKEDITOR.instances.jsReasonEdit.setData(cOBJ.reason),cOBJ.dateRows.days.map(v=>{let newTime=timeConvert(v.time),newDate=moment(v.date,"MM-DD-YYYY").format("MMDDYYYY");timeRowsOBJEdit[newDate]={},timeRowsOBJEdit[newDate].hour=newTime.hours,timeRowsOBJEdit[newDate].partial=null==v.partial?"fullday":v.partial,timeRowsOBJEdit[newDate].minute=newTime.minutes}),remakeRangeRowsEdit("#jsStartDateEdit","#jsEndDateEdit",".jsDurationBox",cOBJ.dateRows),window.timeoff.companyEmployees.map((function(emp){if(emp.user_id==selectedEmployeeId){var employeeJoinedAt=null==emp.joined_at?emp.joined_at:emp.registration_date;employeeJoinedAt=moment(employeeJoinedAt,"YYYY-MM-DD").format(timeoffDateFormat),$("#jsEmployeeInfoEdit").html(`\n                    <figure>\n                        <img src="${getImageURL(emp.image)}"\n                            class="csRadius50">\n                        <div class="csTextBox">\n                            <p>${emp.first_name} ${emp.last_name}</p>\n                            <p class="csTextSmall"> ${remakeEmployeeName(emp,!1)}</p>\n                            <p class="csTextSmall">${emp.email}</p>\n                            <p class="csTextSmall">${employeeJoinedAt}</p>\n                        </div>\n                    </figure>\n                    <div class="clearfix"></div>\n                    `)}})),getSideBarPolicies(employeeId),"cancelled"!=status&&1!=view||($("#editModal").find("select").prop("disabled",!0),$("#editModal").find("input").prop("disabled",!0)),setApproversView(approvers,request.Data.history),setHistoryView(request.Data.history),setUpcomingTimeOffs(selectedEmployeeId),ml(!1,"editModalLoader")})})),$(document).on("click",".jsCreateTimeOffBalanceEdit",(function(event){event.preventDefault(),null!=selectedEmployeeId?($(this).hide(0),$(".jsCreateTimeOffBalanceBackEdit").show(0),$(".jsCreateTimeOffBTN").hide(0),$("#editModal").find('[data-page="main"]').hide(0),$("#editModal").find('[data-page="balance-view"]').show(0),$("#editModal").find(".csModalHeaderTitle span:nth-child(1)").text($("#editModal").find(".csModalHeaderTitle span:nth-child(1)").text().trim().replace("Edit Time off","Balance History")),$.post(handlerURL,{action:"get_employee_balance_history",companyId:companyId,employerId:employerId,employeeId:selectedEmployeeId}).done((function(resp){var rows="";if(0===resp.Data.length)rows+="<tr>",rows+='   <td colspan="6">',rows+='       <p class="alert alert-info text-center">',rows+="          No balance history found.",rows+="       </p>",rows+="   </td>",rows+="</tr>";else{var totalTOs=0,totalTimeTaken={},totalManualTime={};void 0!==resp.Data[0].timeoff_breakdown.active.hour&&(totalTimeTaken.hour=0,totalManualTime.hour=0),void 0!==resp.Data[0].timeoff_breakdown.active.minutes&&(totalTimeTaken.minutes=0,totalManualTime.minutes=0),resp.Data.map((function(balance){var startDate="",endDate="",employeeName="",employeeRole="";1==balance.is_manual?(startDate=moment(balance.effective_at,"YYYY-MM-DD").format(timeoffDateFormat),endDate=moment(balance.effective_at,"YYYY-MM-DD").format(timeoffDateFormat),employeeName=balance.first_name+" "+balance.last_name,employeeRole=remakeEmployeeName(balance,!1),void 0!==balance.timeoff_breakdown.active.hours&&(void 0===totalManualTime.hours&&(totalManualTime.hours=0),totalManualTime.hours+=parseInt(balance.timeoff_breakdown.active.hours)),void 0!==balance.timeoff_breakdown.active.minutes&&(void 0===totalManualTime.minutes&&(totalManualTime.minutes=0),totalManualTime.minutes+=parseInt(balance.timeoff_breakdown.active.minutes))):(totalTOs++,startDate=moment(balance.request_from_date,"YYYY-MM-DD").format(timeoffDateFormat),endDate=moment(balance.request_to_date,"YYYY-MM-DD").format(timeoffDateFormat),employeeName=balance.approverName,employeeRole=balance.approverRole,void 0!==balance.timeoff_breakdown.active.hours&&(void 0===totalTimeTaken.hours&&(totalTimeTaken.hours=0),totalTimeTaken.hours+=parseInt(balance.timeoff_breakdown.active.hours)),void 0!==balance.timeoff_breakdown.active.minutes&&(void 0===totalTimeTaken.minutes&&(totalTimeTaken.minutes=0),totalTimeTaken.minutes+=parseInt(balance.timeoff_breakdown.active.minutes))),rows+="<tr>",rows+="   <td>",rows+="       <strong>",rows+=employeeName+"<br>",rows+="       </strong>",rows+=employeeRole,rows+="   </td>",rows+="   <td>",rows+="       <strong>"+balance.title+"</strong>",rows+="       <p>"+startDate+(""!=endDate?" - "+endDate:"")+"</p>",rows+="   </td>",rows+=' <td class="'+(0==balance.is_added?"text-danger":"text-success")+'"><i class="fa fa-arrow-'+(0==balance.is_added?"down ":"up")+'"></i>&nbsp;'+balance.timeoff_breakdown.text+"</td>",rows+="   <td>",rows+=""!=balance.note?balance.note:"-",rows+="   </td>",rows+="   <td>",rows+=moment(balance.created_at,"YYYY-MM-DD").format(timeoffDateFormatWithTime),rows+="   </td>",rows+="   <td>",rows+='       <strong class="text-'+(1==balance.is_manual?"success":"danger")+'">'+(1==balance.is_manual?"Yes":"No")+"</strong>",rows+="   </td>",rows+="</tr>",rows+="<tr>",rows+='   <td colspan="6">',rows+="       <p><strong>Note</strong>: <strong>"+employeeName+"</strong> has "+(1==balance.is_manual?1==balance.is_added?"added balance":"subtracted balance":"approved time off")+' against policy "<strong>'+balance.title+'</strong>" on <strong>'+moment(balance.created_at,"YYYY-MM-DD").format(timeoffDateFormatWithTime)+"</strong> which will take effect "+(startDate==endDate?"on ":" from ")+" <strong>"+startDate+(startDate!=endDate?" to  "+endDate:"")+"</strong>.</p>",rows+="   </td>",rows+="</tr>"})),$(".jsCreateTimeOffNumber").text(totalTOs),$(".jsCreateTimeOffTimeTaken").text(getText(totalTimeTaken)),$(".jsCreateTimeOffManualAllowedTime").text(getText(totalManualTime))}$("#jsCreateTimeoffBalanceBody").html(rows),ml(!1,"balance-view")}))):alertify.alert("Warning!","Please, select an employee.")})),$(document).on("click",".jsCreateTimeOffBalanceBackEdit",(function(event){event.preventDefault(),$(this).hide(0),$(".jsCreateTimeOffBalanceEdit").show(0),$(".jsCreateTimeOffBTN").show(0),$("#editModal").find('[data-page="balance-view"]').hide(0),$("#editModal").find('[data-page="main"]').show(0),$("#editModal").find(".csModalHeaderTitle span:nth-child(1)").text($("#editModal").find(".csModalHeaderTitle span:nth-child(1)").text().trim().replace("Balance History","Edit Time off"))})),$(document).on("change","#jsEditPolicy",(function(){if(null!==$(this).val()){var singlePolicy=getPolicy($(this).val(),window.timeoff.cPolicies);null==singlePolicy.OffDays?policyOffDays=void 0:policyOffDays=singlePolicy.OffDays.split(",")}else policyOffDays=void 0}))}));