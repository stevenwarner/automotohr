$((function(){let policy={},resetPolicy={},policyId=0,originalOBJ={},policyOBJ={type:0,title:0,order:1,policy_category_type:1,entitledEmployees:[],isEntitledEmployees:0,employeeTypes:[],offDays:[],approver:0,deactivate:0,include:1,method:"yearly",time:"none",frequency:"none",frequencyVal:0,rate:0,rateType:"days",applicableTime:0,applicableTimeType:"hours",carryOverCheck:"no",carryOverType:"days",carryOverVal:0,negativeBalanceCheck:"no",negativeBalanceVal:0,negativeBalanceType:"days",applicableDateType:"hireDate",applicableDate:0,resetDateType:"policyDateCustom",resetDate:0,newHireTime:0,newHireTimeType:0,newHireRate:0,plans:[]},cmnOBJ={Policies:{Main:{action:"get_single_policy_by_id",companyId:companyId,employerId:employerId,employeeId:employeeId,public:0}}};async function startPolicyEditProcess(){const resp=await getSinglePolicy(policyId);if(!0===resp.Redirect)return void alertify.alert("WARNING!","Your session expired. Please, re-login to continue.",()=>{window.location.reload()});if(!1===resp.Status)return void alertify.alert("WARNING!",resp.Response,()=>{});let accruals=JSON.parse(resp.Data.accruals);policy.type=resp.Data.type_sid,policy.title=resp.Data.title,policy.order=resp.Data.sort_order,policy.entitledEmployees=null!==resp.Data.assigned_employees?resp.Data.assigned_employees.split(","):null,policy.approver=parseInt(resp.Data.for_admin),policy.deactivate=resp.Data.is_archived,policy.include=resp.Data.is_included,policy.method=accruals.method,policy.time=accruals.time,policy.frequency=accruals.frequency,policy.frequencyVal=accruals.frequencyVal,policy.rate=accruals.rate,policy.rateType=accruals.rateType,policy.applicableTime=accruals.applicableTime,policy.applicableTimeType=accruals.applicableTimeType,policy.carryOverCheck=accruals.carryOverCheck,policy.carryOverType=accruals.carryOverType,policy.carryOverVal=parseInt(accruals.carryOverVal),policy.negativeBalanceCheck=accruals.negativeBalanceCheck,policy.negativeBalanceVal=accruals.negativeBalanceVal,policy.negativeBalanceType=accruals.negativeBalanceType,policy.applicableDateType=accruals.applicableDateType,policy.applicableDate=accruals.applicableDate,policy.resetDateType=accruals.resetDateType,policy.resetDate=0==accruals.resetDate?0:accruals.resetDate,policy.newHireTime=accruals.newHireTime,policy.newHireTimeType=accruals.newHireTimeType,policy.newHireRate=accruals.newHireRate,policy.employeeTypes=accruals.employeeTypes,policy.offDays=null!==resp.Data.off_days?resp.Data.off_days.split(","):null,policy.plans=accruals.plans,policy.policy_category_type=resp.Data.policy_category_type,"no"!=policy.carryOverCheck&&"yes"!=policy.carryOverCheck&&(policy.carryOverCheck="no"),"no"!=policy.negativeBalanceCheck&&"yes"!=policy.negativeBalanceCheck&&(policy.negativeBalanceCheck="no"),originalOBJ=Object.assign({},policy),console.log(policy),$("#js-policy-type-edit").select2("val",policy.policy_category_type),$("#jsPolicyTitleEdit").text(" - "+policy.title),$("#js-category-edit").select2("val",policy.type),$("#js-policy-title-edit").val(policy.title),$("#js-sort-order-edit").val(policy.order),$("#js-employee-edit").select2("val",policy.entitledEmployees),$("#js-employee-type-edit").select2("val",policy.employeeTypes),$("#js-off-days-edit").select2("val",policy.offDays),$("#js-approver-check-edit").prop("checked",1==policy.approver),$("#js-archive-check-edit").prop("checked",1==policy.deactivate),$("#js-include-check-edit").prop("checked",1==policy.include),$("#js-accrual-time-edit").select2("val",policy.time),$("#js-accrual-time-edit").trigger("change"),$("#js-accrual-frequency-edit").select2("val",policy.frequency),$("#js-accrual-frequency-edit").trigger("change"),$("#js-accrual-frequency-val-edit").val(policy.frequencyVal),$("#js-accrual-rate-edit").val(policy.rate),$(`#js-accrual-rate-type-edit option[value="${policy.rateType}"]`).prop("selected",!0),$("#js-minimum-applicable-hours-edit").val(policy.applicableTime),$(`.js-minimum-applicable-time-edit[value="${policy.applicableTimeType}"]`).prop("checked",!0).trigger("click"),$("#js-carryover-cap-check-edit").select2("val",policy.carryOverCheck),$("#js-carryover-cap-check-edit").trigger("change"),$("#js-carryover-cap-edit").val(policy.carryOverVal),$("#js-accrual-balance-edit").select2("val",policy.negativeBalanceCheck),$("#js-accrual-balance-edit").trigger("change"),$("#js-maximum-balance-edit").val(policy.negativeBalanceVal),$(`.js-hire-date-edit[value="${policy.applicableDateType}"]`).prop("checked",!0),$(`.js-hire-date-edit[value="${policy.applicableDateType}"]`).trigger("change"),$(`.js-policy-reset-date-edit[value="${policy.resetDateType}"]`).prop("checked",!0).trigger("change"),$("#js-accrue-new-hire-edit").val(policy.newHireTime),$("#js-newhire-prorate-edit").val(policy.newHireRate),$("#js-accrual-new-hire-time-type-edit").val(policy.newHireTimeType),$("#js-custom-date-edit").val(policy.applicableDate),$("#js-custom-reset-date-edit").val(policy.resetDate),$("#js-step-bar-edit").show(),1==resp.Data.is_entitled_employee?($("#EntitledEmployees").prop("checked",!0),$("#NonEntitledEmployees").prop("checked",!1)):($("#NonEntitledEmployees").prop("checked",!0),$("#EntitledEmployees").prop("checked",!1)),loadAccrualPlans("edit",policy.plans);let resetAccrual=JSON.parse(resp.Data.reset_policy);resetPolicy.type=resp.Data.type_sid,resetPolicy.title=resp.Data.title,resetPolicy.order=resp.Data.sort_order,resetPolicy.entitledEmployees=null!==resp.Data.assigned_employees?resp.Data.assigned_employees.split(","):null,resetPolicy.approver=parseInt(resp.Data.for_admin),resetPolicy.deactivate=resp.Data.is_archived,resetPolicy.include=resp.Data.is_included,resetPolicy.method=resetAccrual.method,resetPolicy.time=resetAccrual.time,resetPolicy.frequency=resetAccrual.frequency,resetPolicy.frequencyVal=parseInt(resetAccrual.frequencyVal),resetPolicy.rate=resetAccrual.rate,resetPolicy.rateType=resetAccrual.rateType,resetPolicy.applicableTime=resetAccrual.applicableTime,resetPolicy.applicableTimeType=resetAccrual.applicableTimeType,resetPolicy.carryOverCheck=resetAccrual.carryOverCheck,resetPolicy.carryOverType=resetAccrual.carryOverType,resetPolicy.carryOverVal=resetAccrual.carryOverVal,resetPolicy.negativeBalanceCheck=resetAccrual.negativeBalanceCheck,resetPolicy.negativeBalanceVal=resetAccrual.negativeBalanceVal,resetPolicy.negativeBalanceType=resetAccrual.negativeBalanceType,resetPolicy.applicableDateType=resetAccrual.applicableDateType,resetPolicy.applicableDate=resetAccrual.applicableDate,resetPolicy.resetDateType=resetAccrual.resetDateType,resetPolicy.resetDate=0==resetAccrual.resetDate?0:resetAccrual.resetDate,resetPolicy.newHireTime=resetAccrual.newHireTime,resetPolicy.newHireTimeType=resetAccrual.newHireTimeType,resetPolicy.newHireRate=resetAccrual.newHireRate,resetPolicy.employeeTypes=resetAccrual.employeeTypes,resetPolicy.offDays=null!==resp.Data.off_days?resp.Data.off_days.split(","):null,resetPolicy.plans=resetAccrual.plans,$("#js-step-bar-reset").show(),$("#js-category-reset").select2("val",policy.type),$("#js-category-reset").select2("val",resetPolicy.employeeTypes),$("#js-policy-title-reset").val(policy.title),$("#js-sort-order-reset").val(policy.order),$("#js-employee-reset").select2("val",policy.entitledEmployees),$("#js-off-days-edit").select2("val",policy.offDays),$("#js-employee-type-reset").select2("val",policy.employeeTypes),$("#js-approver-check-reset").prop("checked",1==policy.approver),$("#js-archive-check-reset").prop("checked",1==policy.deactivate),$("#js-include-check-reset").prop("checked",1==policy.include),$("#js-accrual-time-reset").select2("val",resetAccrual.time),$("#js-accrual-time-reset").trigger("change"),$("#js-accrual-frequency-reset").select2("val",resetAccrual.frequency),$("#js-accrual-frequency-reset").trigger("change"),$("#js-accrual-frequency-val-reset").val(resetAccrual.frequencyVal),$("#js-accrual-rate-reset").val(resetAccrual.rate),$(`#js-accrual-rate-type-reset option[value="${resetAccrual.rateType}"]`).prop("selected",!0),$("#js-minimum-applicable-hours-reset").val(resetAccrual.applicableTime),$(`.js-minimum-applicable-time-reset[value="${resetAccrual.applicableTimeType}"]`).prop("checked",!0).trigger("click"),$("#js-carryover-cap-check-reset").select2("val",resetAccrual.carryOverCheck),$("#js-carryover-cap-check-reset").trigger("change"),$("#js-carryover-cap-reset").val(resetAccrual.carryOverVal),$("#js-accrual-balance-reset").select2("val",resetAccrual.negativeBalanceCheck),$("#js-accrual-balance-reset").trigger("change"),$("#js-maximum-balance-reset").val(resetAccrual.negativeBalanceVal),$(`.js-hire-date-reset[value="${resetAccrual.applicableDateType}"]`).prop("checked",!0),$(`.js-hire-date-reset[value="${resetAccrual.applicableDateType}"]`).trigger("change"),$(`.js-policy-reset-date-reset[value="${resetAccrual.resetDateType}"]`).prop("checked",!0).trigger("change"),$("#js-accrue-new-hire-reset").val(resetAccrual.newHireTime),$("#js-newhire-prorate-reset").val(resetAccrual.newHireRate),$("#js-accrual-new-hire-time-type-reset").val(resetAccrual.newHireTimeType),$("#js-custom-date-reset").val(resetAccrual.applicableDate),$("#js-custom-reset-date-reset").val(resetAccrual.resetDate),$("#js-step-bar-reset").show(),loadAccrualPlans("reset",resetAccrual.plans),setNewHireAccrual("edit"),setNewHireAccrual("reset"),ml(!1,"policy")}function getSinglePolicy(policyId){return new Promise((res,rej)=>{$.post(handlerURL,Object.assign(cmnOBJ.Policies.Main,{policyId:policyId}),resp=>{res(resp)})})}function stepCompletedEdit(step){return 1===step?(policyOBJ.policy_category_type=getField("#js-policy-type-edit"),console.log(policyOBJ.policy_category_type),policyOBJ.type=getField("#js-category-edit"),0==policyOBJ.type?(alertify.alert("WARNING!","Please, select the policy type.",()=>{}),!1):(policyOBJ.title=getField("#js-policy-title-edit"),0==policyOBJ.title?(alertify.alert("WARNING!","Please, add the policy title.",()=>{}),!1):(policyOBJ.order=getField("#js-sort-order-edit"),policyOBJ.entitledEmployees=getField("#js-employee-edit"),policyOBJ.isEntitledEmployees=$(".jsIsEntitledEmployee:checked").val(),policyOBJ.employeeTypes=getField("#js-employee-type-edit"),policyOBJ.offDays=getField("#js-off-days-edit"),policyOBJ.approver=!0===$("#js-approver-check-edit").prop("checked")?1:0,policyOBJ.deactivate=!0===$("#js-archive-check-edit").prop("checked")?1:0,policyOBJ.include=1==$("#js-include-check-edit").prop("checked")?1:0,saveStep(policyOBJ),!0))):2===step?(policyOBJ.method=getField("#js-accrual-method-edit"),policyOBJ.time=getField("#js-accrual-time-edit"),policyOBJ.frequency=getField("#js-accrual-frequency-edit"),policyOBJ.frequencyVal=getField("#js-accrual-frequency-val-edit"),policyOBJ.rate=getField("#js-accrual-rate-edit"),policyOBJ.rateType=getField("#js-accrual-rate-type-edit option:selected"),policyOBJ.applicableTimeType=getField(".js-minimum-applicable-time-edit:checked"),policyOBJ.applicableTime=getField("#js-minimum-applicable-hours-edit"),policyOBJ.plans=getAccrualPlans("edit"),!0===policyOBJ.plans?(alertify.alert("WARNING!","Please, add the proper plans.",()=>{}),!1):(saveStep(policyOBJ),!0)):3===step?(policyOBJ.carryOverCheck=getField("#js-carryover-cap-check-edit"),policyOBJ.carryOverVal=getField("#js-carryover-cap-edit"),policyOBJ.carryOverType=getField("#js-accrual-carryover-type-edit option:selected"),saveStep(policyOBJ),!0):4===step?(policyOBJ.negativeBalanceCheck=getField("#js-accrual-balance-edit"),policyOBJ.negativeBalanceVal=getField("#js-maximum-balance-edit"),policyOBJ.negativeBalanceType=getField("#js-accrual-negative-balance-type-edit option:selected"),saveStep(policyOBJ),!0):5===step?(policyOBJ.applicableDateType=getField(".js-hire-date-edit:checked"),policyOBJ.applicableDate=getField("#js-custom-date-edit"),"hiredate"!=policyOBJ.applicableDateType.toLowerCase()&&0==policyOBJ.applicableDate?(alertify.alert("WARNING!","Please, select a policy applicable date.",()=>{}),!1):(saveStep(policyOBJ),!0)):6===step?(policyOBJ.resetDateType=getField(".js-policy-reset-date-edit:checked"),policyOBJ.resetDate=getField("#js-custom-reset-date-edit"),"policydate"!=policyOBJ.resetDateType.toLowerCase()&&0==policyOBJ.resetDate?(alertify.alert("WARNING!","Please, select a policy reset date.",()=>{}),!1):(saveStep(policyOBJ),!0)):7===step?(policyOBJ.newHireTime=getField("#js-accrue-new-hire-edit"),policyOBJ.newHireTimeType=getField("#js-accrual-new-hire-time-type-edit option:selected"),policyOBJ.newHireRate=getField("#js-newhire-prorate-edit"),saveStep(policyOBJ),!0):8===step&&(policyOBJ.plans=getAccrualPlans("edit"),saveStep(policyOBJ),!0)}function finalStepCompletedEdit(policy){alertify.confirm("This action will effect the employees balance. Are you sure you want to continue?",()=>{ml(!0,"policy");let post=Object.assign({},policy,{action:"update_policy",companyId:companyId,employeeId:employeeId,employerId:employerId,public:0,policyId:policyId});$.post(handlerURL,post,resp=>{ml(!1,"policy"),!0!==resp.Redirect?!1!==resp.Status?alertify.alert("SUCCESS!",resp.Response,()=>{redirectPage&&loadViewPage()}):alertify.alert("WARNING!",resp.Response,()=>{}):alertify.alert("WARNING!","Your session expired. Please, re-login to continue.",()=>{window.location.reload()})})},()=>{ml(!1,"policy")}).set("labels",{ok:"Yes",cancel:"No"}).setHeader("CONFIRM!")}function stepCompletedReset(step){return 2===step?(resetPolicy.method=getField("#js-accrual-method-reset"),resetPolicy.time=getField("#js-accrual-time-reset"),resetPolicy.frequency=getField("#js-accrual-frequency-reset"),resetPolicy.frequencyVal=getField("#js-accrual-frequency-val-reset"),resetPolicy.rate=getField("#js-accrual-rate-reset"),resetPolicy.rateType=getField("#js-accrual-rate-type-reset option:selected"),resetPolicy.applicableTimeType=getField(".js-minimum-applicable-time-reset:checked"),resetPolicy.applicableTime=getField("#js-minimum-applicable-hours-reset"),resetPolicy.plans=getAccrualPlans("reset"),!0===resetPolicy.plans?(alertify.alert("WARNING!","Please, add the proper plans.",()=>{}),!1):(saveStep(resetPolicy),!0)):3===step?(resetPolicy.carryOverCheck=getField("#js-carryover-cap-check-reset"),resetPolicy.carryOverVal=getField("#js-carryover-cap-reset"),resetPolicy.carryOverType=getField("#js-accrual-carryover-type option:selected"),saveStep(resetPolicy),!0):4===step?(resetPolicy.negativeBalanceCheck=getField("#js-accrual-balance-reset"),resetPolicy.negativeBalanceVal=getField("#js-maximum-balance-reset"),resetPolicy.negativeBalanceType=getField("#js-accrual-negative-balance-type-reset option:selected"),saveStep(resetPolicy),!0):5===step?(resetPolicy.applicableDateType=getField(".js-hire-date-reset:checked"),resetPolicy.applicableDate=getField("#js-custom-date-reset"),"hiredate"!=resetPolicy.applicableDateType.toLowerCase()&&0==resetPolicy.applicableDate?(alertify.alert("WARNING!","Please, select a policy applicable date.",()=>{}),!1):(saveStep(resetPolicy),!0)):6===step?(resetPolicy.resetDateType=getField(".js-policy-reset-date-reset:checked"),resetPolicy.resetDate=getField("#js-custom-reset-date-reset"),"policydate"!=resetPolicy.resetDateType.toLowerCase()&&0==resetPolicy.resetDate?(alertify.alert("WARNING!","Please, select a policy reset date.",()=>{}),!1):(saveStep(resetPolicy),!0)):7!==step||(resetPolicy.newHireTime=getField("#js-accrue-new-hire-reset"),resetPolicy.newHireTimeType=getField("#js-accrual-new-hire-time-type-reset option:selected"),resetPolicy.newHireRate=getField("#js-newhire-prorate-reset"),saveStep(resetPolicy),!0)}function finalStepCompletedReset(policy){ml(!0,"policy");let post=Object.assign({},policy,{action:"update_reset_policy",companyId:companyId,employeeId:employeeId,employerId:employerId,public:0,policyId:policyId});$.post(handlerURL,post,resp=>{ml(!1,"policy"),!0!==resp.Redirect?!1!==resp.Status?alertify.alert("SUCCESS!",resp.Response,()=>{redirectPage&&loadViewPage()}):alertify.alert("WARNING!",resp.Response,()=>{}):alertify.alert("WARNING!","Your session expired. Please, re-login to continue.",()=>{window.location.reload()})})}window.timeoff.startPolicyEditProcess=startPolicyEditProcess,window.timeoff.stepCompletedEdit=stepCompletedEdit,window.timeoff.finalStepCompletedEdit=finalStepCompletedEdit,window.timeoff.stepCompletedReset=stepCompletedReset,window.timeoff.finalStepCompletedReset=finalStepCompletedReset,$(".jsEditResetCheckbox").click((function(){$(".jsEditResetCheckbox").removeClass("btn-orange"),$(".jsEditResetCheckbox").addClass("btn-default"),$(this).addClass("btn-orange"),"rp"===$(this).data("type")?($("#jsEditPage").fadeOut(),$("#jsResetPage").fadeIn(300),$(".jsEditResetText").text("The policy for next year."),page="reset"):($("#jsResetPage").fadeOut(),$("#jsEditPage").fadeIn(300),$(".jsEditResetText").text("The policy for current year."),page="edit")})),$("#js-employee-edit").on("select2:select",(function(event){if("All"!=event.params.data.text){let newVals=$(this).val().filter((function(ef){return"all"!=ef}));$("#js-employee-edit").val(newVals)}else $("#js-employee-edit").val("all");$("#js-employee-edit").trigger("change.select2")})),$("#js-category-edit").on("change",(function(){var i;null!==$('#js-category-edit option[value="'+$(this).val()+'"]').text().toLowerCase().trim().match(/(fmla)/g)?$(".js-fmla-range-wrap-edit").show():($(".js-fmla-range-wrap-edit").hide(0),$(".js-fmla-range-edit").prop("checked",!1),$('.js-fmla-range-edit[value="standard_year"]').prop("checked",!0))})),$("#js-accrual-method-edit").change(setAccrualText),$("#js-accrual-frequency-edit").on("change",(function(){"none"==$(this).val()?"Jan To Dec"!=$('#js-accrual-time-edit[value="none"]').text()&&($("#js-accrual-time-edit").html('\n                <option value="none" selected="true">Jan To Dec</option>\n                <option value="start_of_period">Jan to Jun</option>\n                <option value="end_of_period">Jul to Dec</option>\n                '),$("#js-accrual-time-edit").select2()):"1st To 30th"!=$('#js-accrual-time-edit[value="none"]').text()&&($("#js-accrual-time-edit").html('\n                    <option value="none" selected="true">1st To 30th</option>\n                    <option value="start_of_period">1st To 15th</option>\n                    <option value="end_of_period">15th To 30th</option>\n                '),$("#js-accrual-time-edit").select2()),"custom"==$(this).val()?($(".jsCustomBoxAdd").show(0),$("#js-accrual-time-edit").prop("disabled",!0),$("#js-accrual-time-text-edit").show()):($(".jsCustomBoxAdd").hide(0),$("#js-accrual-time-edit").prop("disabled",!1),$("#js-accrual-time-text-edit").hide()),setAccrualText()})),$("#js-carryover-cap-check-edit").change((function(){$(".js-carryover-box-edit").find("input").val(0),"no"===$(this).val()?$(".js-carryover-box-edit").hide():$(".js-carryover-box-edit").show()})),$("#js-accrual-balance-edit").change((function(){$(".js-accrual-balance-edit").find("input").val(0),"no"===$(this).val()?$(".js-negative-box-edit").hide():$(".js-negative-box-edit").show()})),$(".js-hire-date-edit").on("change",(function(){"hireDate"==$(this).val()?($(".jsImplementDateBox-edit").hide(0),$("#js-custom-date-edit").val("")):$(".jsImplementDateBox-edit").show(0)})),$(".js-policy-reset-date-edit").on("change",(function(){"policyDate"==$(this).val()?($(".jsResetDateBox-edit").hide(0),$("#js-custom-reset-date-edit").val("")):$(".jsResetDateBox-edit").show(0)})),$(".js-plan-btn-edit,.js-plan-btn-reset").click((function(e){e.preventDefault(),loadAccrualPlans($(this).data("type"))})),$(document).on("click",".js-plan-remove-btn",(function(e){e.preventDefault(),""!=$(this).parent().find(".js-pt").val().trim()||""!=$(this).parent().find(".js-py").val().trim()?alertify.confirm("Do you really want to delete this accrual plan?",()=>{$(this).parent().remove()}).set("labels",{ok:"Yes",cancel:"No"}):$(this).parent().remove()})),$('[data-hint="js-hint"]').click((function(e){e.preventDefault(),$(`.js-hint-${$(this).data("target")}`).toggle()})),$(document).on("select2:selecting","#js-plans-select-edit",(function(e){makePlanRow(e.params.args.data.id,"edit")})),$(document).on("select2:unselecting","#js-plans-select-edit",(function(e){removePlan(e.params.args.data.id,"edit")})),$(document).on("click",".js-remove-plan-edit",(function(e){removePlan($(this).closest("li").data("id"),"edit"),$("#js-plans-select-edit").select2("val",newValues($("#js-plans-select-edit").val(),$(this).closest("li").data("id")))})),$("#js-unlimited-policy-check-edit").click((function(){!0===$(this).prop("checked")?$("#js-plan-box-edit").hide():$("#js-plan-box-edit").show()})),$("#js-accrual-time-edit").change(setAccrualText),$("#js-accrual-rate-type-edit").change(setAccrualText),$("#js-accrual-rate-edit").keyup((function(){""==$(this).val().trim()?($("#js-accrual-time-edit").prop("disabled",!0),$("#js-accrual-time-text-edit").show()):null!=$(this).val().match(/[a-zA-Z]/)?($(this).val(0),$("#js-accrual-time-edit").prop("disabled",!0),$("#js-accrual-time-text-edit").show()):$(this).val()<0?($(this).val(0),$("#js-accrual-time-edit").prop("disabled",!0),$("#js-accrual-time-text-edit").show()):($("#js-accrual-time-edit").prop("disabled",!1),$("#js-accrual-time-text-edit").hide()),0==$(this).val()?$(".js-plan-btn-edit").prop("disabled",!0):$(".js-plan-btn-edit").prop("disabled",!1),setAccrualText()})),$("#js-accrual-frequency-val-edit").keyup((function(){$(this).val().trim()<=0?$(this).val(1):$(this).val().trim()>12&&$(this).val(12),setAccrualText()})),$("#js-category-reset").on("change",(function(){var i;null!==$('#js-category-reset option[value="'+$(this).val()+'"]').text().toLowerCase().trim().match(/(fmla)/g)?$(".js-fmla-range-wrap-reset").show():($(".js-fmla-range-wrap-reset").hide(0),$(".js-fmla-range-reset").prop("checked",!1),$('.js-fmla-range-reset[value="standard_year"]').prop("checked",!0))})),$("#js-accrual-method-reset").change(setAccrualText),$("#js-accrual-frequency-reset").on("change",(function(){"none"==$(this).val()?"Jan To Dec"!=$('#js-accrual-time-reset[value="none"]').text()&&($("#js-accrual-time-reset").html('\n                <option value="none" selected="true">Jan To Dec</option>\n                <option value="start_of_period">Jan to Jun</option>\n                <option value="end_of_period">Jul to Dec</option>\n                '),$("#js-accrual-time-reset").select2()):"1st To 30th"!=$('#js-accrual-time-reset[value="none"]').text()&&($("#js-accrual-time-reset").html('\n                    <option value="none" selected="true">1st To 30th</option>\n                    <option value="start_of_period">1st To 15th</option>\n                    <option value="end_of_period">15th To 30th</option>\n                '),$("#js-accrual-time-reset").select2()),"custom"==$(this).val()?($(".jsCustomBoxAdd").show(0),$("#js-accrual-time-reset").prop("disabled",!0),$("#js-accrual-time-text-reset").show()):($(".jsCustomBoxAdd").hide(0),$("#js-accrual-time-reset").prop("disabled",!1),$("#js-accrual-time-text-reset").hide()),setAccrualText()})),$("#js-carryover-cap-check-reset").change((function(){$(".js-carryover-box-reset").find("input").val(0),"no"===$(this).val()?$(".js-carryover-box-reset").hide():$(".js-carryover-box-reset").show()})),$("#js-accrual-balance-reset").change((function(){$(".js-accrual-balance-reset").find("input").val(0),"no"===$(this).val()?$(".js-negative-box-reset").hide():$(".js-negative-box-reset").show()})),$(".js-hire-date-reset").on("change",(function(){"hireDate"==$(this).val()?($(".jsImplementDateBox-reset").hide(0),$("#js-custom-date-reset").val("")):$(".jsImplementDateBox-reset").show(0)})),$(".js-policy-reset-date-reset").on("change",(function(){"policyDate"==$(this).val()?($(".jsResetDateBox-reset").hide(0),$("#js-custom-reset-date-reset").val("")):$(".jsResetDateBox-reset").show(0)})),$(document).on("click",".js-plan-remove-btn",(function(e){e.preventDefault(),""!=$(this).parent().find(".js-pt").val().trim()||""!=$(this).parent().find(".js-py").val().trim()?alertify.confirm("Do you really want to delete this accrual plan?",()=>{$(this).parent().remove()}).set("labels",{ok:"Yes",cancel:"No"}):$(this).parent().remove()})),$('[data-hint="js-hint"]').click((function(e){e.preventDefault(),$(`.js-hint-${$(this).data("target")}`).toggle()})),$(document).on("select2:selecting","#js-plans-select-reset",(function(e){makePlanRow(e.params.args.data.id,"reset")})),$(document).on("select2:unselecting","#js-plans-select-reset",(function(e){removePlan(e.params.args.data.id,"reset")})),$(document).on("click",".js-remove-plan-reset",(function(e){removePlan($(this).closest("li").data("id"),"reset"),$("#js-plans-select-reset").select2("val",newValues($("#js-plans-select-reset").val(),$(this).closest("li").data("id")))})),$("#js-unlimited-policy-check-reset").click((function(){!0===$(this).prop("checked")?$("#js-plan-box-reset").hide():$("#js-plan-box-reset").show()})),$("#js-accrual-time-reset").change(setAccrualText),$("#js-accrual-rate-type-reset").change(setAccrualText),$("#js-accrual-rate-reset").keyup((function(){$(this).val()<=0?($(this).val(0),$("#js-accrual-time-reset").prop("disabled",!0),$("#js-accrual-time-text-reset").show()):($("#js-accrual-time-reset").prop("disabled",!1),$("#js-accrual-time-text-reset").hide()),0==$(this).val()?$(".js-plan-btn-reset").prop("disabled",!0):$(".js-plan-btn-reset").prop("disabled",!1),setAccrualText()})),$("#js-accrual-frequency-val-reset").keyup((function(){$(this).val().trim()<=0?$(this).val(1):$(this).val().trim()>12&&$(this).val(12),setAccrualText()})),$(document).on("click",".js-edit-row-btn",(function(e){e.preventDefault(),policy=Object.assign(policyOBJ),policyId=$(this).closest(".jsBox").data("id"),originalOBJ={},ml(!0,"policy"),loadEditPage()})),$("#js-policy-title-edit").keyup((function(){$("#jsPolicyTitleEdit").text(" - "+$(this).val())})),$("#js-accrue-new-hire-edit").keyup(setNewHireAccrual),$("#js-newhire-prorate-edit").keyup(setNewHireAccrual),$("#js-accrual-new-hire-time-type-edit").change(setNewHireAccrual),$("#js-accrue-new-hire-reset").keyup(setNewHireAccrual),$("#js-newhire-prorate-reset").keyup(setNewHireAccrual),$("#js-accrual-new-hire-time-type-reset").change(setNewHireAccrual),$(".jsStepSave").click(e=>{e.preventDefault(),stepCompletedEdit(1)&&stepCompletedEdit(2)&&stepCompletedEdit(3)&&stepCompletedEdit(4)&&stepCompletedEdit(5)&&stepCompletedEdit(6)&&stepCompletedEdit(7)&&(redirectPage=!1,finalStepCompletedEdit(JSON.parse(localStorage.getItem("editPolicy"))))}),$(".jsStepSaveReset").click(e=>{e.preventDefault(),stepCompletedReset(1)&&stepCompletedReset(2)&&stepCompletedReset(3)&&stepCompletedReset(4)&&stepCompletedReset(5)&&stepCompletedReset(6)&&stepCompletedReset(7)&&(redirectPage=!1,finalStepCompletedReset(JSON.parse(localStorage.getItem("resetPolicy"))))})}));