$((function () { let e, t, n = { title: "", description: "", category: "", is_recurring: !1, recur_type: "days", recur_number: 0, available_date: 0, questions: [] }, s = []; async function i() { n = { title: "", description: "", category: "", is_recurring: !1, recur_type: "days", recur_number: 0, available_date: 0 }; try { const e = await makeSecureCallToApiServer("surveys/templates/view", { method: "GET" }); t.setContent(e), $("#jsTemplateTitle").val(n.title), $("#jsTemplateDescription").val(n.description), $("#jsTemplateRecur").prop("checked", n.is_recurring), $("#jsTemplateRecurNumber").val(n.recur_number), $("#jsTemplateRecurType option[value='" + n.recur_type + "']").prop("selected", !0), 0 == n.is_recurring ? $(".jsRecurringSurveyBox").addClass("hidden") : $(",jsRecurringSurveyBox").removeClass("hidden"), o(), t.loader(!1), r("basic"), $("#jsAddQuestionsArea").sortable() } catch (e) { handleErrorResponse(e), t.closeModal() } } function o() { if (!s.length) return $("#jsAddQuestionsArea").html('<p class="alert alert-info text-center">No questions found yet.</p>'); let e = ""; s.map((function (t) { void 0 !== t.description ? e += getDescriptionPreview(t) : e += getQuestionPreview(t) })), $("#jsAddQuestionsArea").html(e) } function a(e) { return s.filter((function (t) { return t.question_id == e }))[0] } function r(e) { $("#sectionMain").addClass("hidden"), $("#sectionAddQuestionBox").addClass("hidden"), $("#sectionEditQuestionBox").addClass("hidden"), $("#sectionAddDescription").addClass("hidden"), t.setButtons(""), setTimeout((function () { "basic" === e ? ($("#sectionMain").removeClass("hidden"), t.setButtons('<button type="button" class="btn btn-orange jsTemplateSaveBtn"><i class="fa fa-save"></i>Save Changes</button>')) : "add_question" === e ? ($("#sectionAddQuestionBox").removeClass("hidden"), t.setButtons('\n                    <button type="button" class="btn btn-black jsBackToAddCoursePage"><i class="fa fa-arrow-left" aria-hidden="true"></i>&nbsp;Back</button>\n                    <button type="button" class="btn btn-orange jsAddQuestionSaveBtn"><i class="fa fa-plus-circle" aria-hidden="true"></i>&nbsp;Save Question</button>\n                ')) : "edit_question" === e ? ($("#sectionEditQuestionBox").removeClass("hidden"), t.setButtons('\n                    <button type="button" class="btn btn-black jsBackToAddCoursePage"><i class="fa fa-arrow-left" aria-hidden="true"></i>&nbsp;Back</button>\n                    <button type="button" class="btn btn-orange jsEditQuestionSaveBtn"><i class="fa fa-plus-circle" aria-hidden="true"></i>&nbsp;Update Question</button>\n                ')) : "add_description" === e && ($("#sectionAddDescription").removeClass("hidden"), t.setButtons('\n                    <button type="button" class="btn btn-black jsBackToAddCoursePage"><i class="fa fa-arrow-left" aria-hidden="true"></i>&nbsp;Back</button>\n                    <button type="button" class="btn btn-orange jsAddEditDescription"><i class="fa fa-plus-circle" aria-hidden="true"></i>&nbsp;Save Changes</button>\n                ')) }), 10) } $(document).on("keyup", "#jsTemplateTitle", (function (e) { n.title = $(this).val() })), $(document).on("keyup", "#jsTemplateDescription", (function (e) { n.description = $(this).val() })), $(document).on("click", "#jsTemplateRecur", (function (e) { n.is_recurring = $(this).prop("checked"), n.is_recurring ? $(".jsRecurringSurveyBox").removeClass("hidden") : $(".jsRecurringSurveyBox").addClass("hidden") })), $(document).on("keyup", "#jsTemplateRecurNumber", (function (e) { n.recur_number = $(this).val() })), $(document).on("change", "#jsTemplateRecurType", (function (e) { n.recur_type = $(this).val() })), $(document).on("click", ".jsTemplateSaveBtn", (function (o) { o.preventDefault(), n.title ? !n.is_recurring || n.recur_number ? 0 !== s.length ? (function () { let e = $("#jsAddQuestionsArea").sortable("toArray", { attribute: "data-id" }), t = [], n = ""; e.map((function (e) { if ("desc_" === e.substr(0, 5)) n = a(e.replace("desc_", "")).description; else { let s = a(e); s.tag = n, t.push(s) } })), s = t }(), n.questions = s, async function () { e = callButtonHook($(".jsTemplateSaveBtn"), !0); try { const e = await makeSecureCallToApiServer("surveys/templates/create", { method: "POST", headers: { "Content-Type": "application/json" }, data: JSON.stringify(n), caches: !1 }); t.closeModal(), _success(e.message, (function () { i() })) } catch (t) { handleErrorResponse(t), callButtonHook(e, !1) } }()) : _error("Please add at least one question.") : _error("Recur number is required.") : _error("Title is required.") })), $(document).on("click", ".jsTemplateAddQuestion", (function (e) { e.preventDefault(), r("add_question"), loadAddQuestionView((function (e) { s.push(e), o(), r("basic") })) })), $(document).on("click", ".jsTemplateAddDescription", (function (e) { e.preventDefault(), r("add_description") })), $(document).on("click", ".jsAddEditDescription", (function (e) { e.preventDefault(); const t = $("#jsAddEditDescription").val().trim(); t.trim() && "" !== $("<div>").html(t).text().trim() ? (s.push({ question_id: 0, description: t }), r("basic"), o()) : _error("Description cannot be empty.") })), $(document).on("click", ".jsBackToAddCoursePage", (function (e) { e.preventDefault(), r("basic") })), $(document).on("click", ".jsRemoveQuestion", (function (e) { e.preventDefault(); const t = $(this).closest(".jsQuestionView").data("id"); _confirm("Do you want to delete this question?", (function () { !function (e) { s = s.filter((function (t) { return t.question_id != e })), o() }(t) })) })), $(document).on("click", ".jsEditQuestion", (function (e) { e.preventDefault(), e.stopPropagation(); const t = a($(this).closest(".jsQuestionView").data("id")); r("edit_question"), loadEditQuestionView(t, (function (e) { !function (e, t) { s = s.map((function (n) { return n.question_id === t ? e : n })) }(e, e.question_id), o(), r("basic") })) })), window.startTemplateAddProcess = function () { t = $("#jsSurveyTemplateAdd").msSiteModal(), i() } }));