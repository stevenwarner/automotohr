$((function () { let e, t, o, i = { question_id: 0, question_required: !1, question_title: "", question_content: "", question_type: "text", choice_list: {}, video_type: "upload", video_file_name: "" }; $(document).on("click", ".jsModalCancel", (function () { o.close() })), $(document).on("change", "#jsAddQuestionType", (function () { $(".jsAddQuestionPlace").addClass("hidden"), "multiple_choice" === $(this).val() || "single_choice" === $(this).val() ? $(".jsAddQuestionChoice").removeClass("hidden") : "yes_no" === $(this).val() ? $(".jsAddQuestionYesNo").removeClass("hidden") : "rating" === $(this).val() && $(".jsAddQuestionRating").removeClass("hidden") })), $(document).on("change", ".jsAddQuestionVideoType", (function () { $(".jsAddQuestionUploadVideoBox").addClass("hidden"), $(".jsAddQuestionRecordVideoBox").addClass("hidden"), $(".jsAddQuestionLinkVideoBox").addClass("hidden"), o.close(), "upload" === $(this).val() ? $(".jsAddQuestionUploadVideoBox").removeClass("hidden") : "record" === $(this).val() ? ($(".jsAddQuestionRecordVideoBox").removeClass("hidden"), o.init()) : "none" != $(this).val() && $(".jsAddQuestionLinkVideoBox").removeClass("hidden") })), $(document).on("click", ".jsAddQuestionSaveBtn", (function (s) { s.preventDefault(), async function () { const s = []; i.question_title = $("#jsAddQuestionTitle").val().trim(), i.question_content = $("#jsAddQuestionHelp").val().trim(), i.question_required = $("#jsAddQuestionRequired").prop("checked"), i.question_type = $("#jsAddQuestionType").select2("val"), i.choice_list = {}, i.video_type = $(".jsAddQuestionVideoType:checked").val() || null, i.video_file_name = "", i.question_title || s.push('"Question" field is mandatory.'); i.question_type || s.push('"Question type" field is mandatory.'); "single_choice" === i.question_type || "multiple_choice" === i.question_type ? $(".csChoiceRow").map((function (e) { const t = { answer_choice: $(this).find(".jsAddQuestionChoiceAnswer").val().trim(), answer_score: $(this).find(".jsAddQuestionChoiceAnswerScore").val().trim(), answer_status: $(this).find(".jsAddQuestionChoiceAnswerStatus").val().trim() }; t.answer_choice || s.push('"Answer Choice" is missing for row ' + (e + 1) + "."), i.choice_list[e] = t })) : "yes_no" === i.question_type ? (i.choice_list.yes = { score: $("#jsAddQuestionYesNoYSelect option:checked").val(), status: $("#jsAddQuestionYesNoYStatus option:checked").val() }, i.choice_list.no = { score: $("#jsAddQuestionYesNoNSelect option:checked").val(), status: $("#jsAddQuestionYesNoNStatus option:checked").val() }) : "rating" === i.question_type && (i.choice_list = { rating: $("#jsAddQuestionRatingScale option:checked").val(), min: $("#jsAddQuestionRatingMinText").val() || "Very poor", max: $("#jsAddQuestionRatingMaxText").val() || "Very good" }); i.video_type || s.push('"Video type" field is mandatory.'); let n = {}, d = {}, l = !1; "upload" === i.video_type ? (n = $("#jsAddQuestionUploadVideo").msFileUploader("get"), Object.keys(n).length ? n.errorCode && s.push(n.errorCode) : s.push('"Video file" is mandatory. Please upload a file.'), l = !0) : "record" === i.video_type ? (d = await o.getVideo(), 5 === d.length && s.push('"Video Recording" is mandatory. Please record a video.'), l = !0) : "link" === i.video_type && (i.video_file_name = $("#jsAddQuestionLink").val().trim(), i.video_file_name ? i.video_file_name.isValidYoutubeLink() || i.video_file_name.isValidVimeoLink() || s.push("Invalid YouTube / Vimeo link.") : s.push("YouTube / Vimeo link is required.")); if (s.length) return alertify.alert("ERROR!", getErrorsStringFromArray(s), CB); if (e = callButtonHook($(".jsAddQuestionSaveBtn"), !0), l) { let t = {}; if ("upload" === i.video_type ? (t = await function (e) { const t = new FormData; return t.append("file", e), makeSecureCallToApiServer("uploader", { method: "POST", timeout: 0, processData: !1, mimeType: "multipart/form-data", contentType: !1, data: t }) }(n), "string" == typeof t && (t = JSON.parse(t))) : t = await (a = d, makeSecureCallToApiServer("uploader/stream", { method: "POST", timeout: 0, contentType: "application/json", data: JSON.stringify({ stream: a }) })), !Object.keys(t).length) return callButtonHook(e, !1), alertify.alert("ERROR!", "Failed to upload file.", CB); i.video_file_name = t.data } var a; i.question_id = Date.now(), o.close(), $("#jsAddQuestionUploadVideo").msFileUploader("clear"), callButtonHook(e, !1), t(i) }() })), $(document).on("click", ".jsAddChoiceAnswer", (function (e) { e.preventDefault(); $(".csChoiceBox").append('\n\t\t\x3c!-- secondary question row --\x3e\n\t\t<div class="csChoiceRow">\n\t\t\t<div class="row">\n\t\t\t\t<div class="col-xs-12 col-sm-5">\n\t\t\t\t\t<label>Answer Choice <strong class="text-danger">*</strong></label>\n\t\t\t\t\t<input type="text" class="form-control jsAddQuestionChoiceAnswer" />\n\t\t\t\t</div>\n\t\t\t\t<div class="col-xs-12 col-sm-3">\n\t\t\t\t\t<label>Question Score <strong class="text-danger">*</strong></label>\n\t\t\t\t\t<select class="form-control jsAddQuestionChoiceAnswerScore">\n\t\t\t\t\t\t<option value="0">Not acceptable - 0</option>\n\t\t\t\t\t\t<option value="1">Acceptable - 1</option>\n\t\t\t\t\t\t<option value="2">Good - 2</option>\n\t\t\t\t\t\t<option value="3">Very Good - 3</option>\n\t\t\t\t\t\t<option value="4">Excellent - 4</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div class="col-xs-12 col-sm-2">\n\t\t\t\t\t<label>Status <strong class="text-danger">*</strong></label>\n\t\t\t\t\t<select class="form-control jsAddQuestionChoiceAnswerStatus">\n\t\t\t\t\t\t<option value="pass">Pass</option>\n\t\t\t\t\t\t<option value="fail">Fail</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div class="col-xs-12 col-sm-1">\n\t\t\t\t\t<p>&nbsp;</p>\n\t\t\t\t\t<button class="btn btn-danger jsDeleteChoiceAnswer" type="button" title="Remove answer" placement="top">\n\t\t\t\t\t\t<i class="fa fa-times-circle" aria-hidden="true"></i>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<br />\n\t\t</div>\n\t\t\t\t') })), $(document).on("click", ".jsDeleteChoiceAnswer", (function (e) { e.preventDefault(), $(this).closest(".csChoiceRow").remove() })), window.loadAddQuestionView = function (e) { t = e, o = new msVideoRecorder({ recorderPlayer: "jsAddQuestionRecordingLive", previewPlayer: "jsAddQuestionRecordingRecorded", recordButton: "jsAddQuestionRecordingStart", playRecordedVideoBTN: "jsAddQuestionRecordingPlay", pauseRecordedVideoBTN: "jsAddQuestionRecordingPause", resumeRecordedVideoBTN: "jsAddQuestionRecordingResume", removeRecordedVideoBTN: "jsAddQuestionRecordingRemove", errorSectionReference: "jsAddQuestionRecordingError" }), $("#jsAddQuestionUploadVideo").msFileUploader({ fileLimit: "200mb", allowedTypes: ["mp4", "mov"] }), $("#jsAddQuestionType").select2({ minimumResultsForSearch: -1 }), $("#jsAddQuestionTitle").val(""), $("#jsAddQuestionHelp").val(""), $("#jsAddQuestionRequired").prop("checked", !1), $("#jsAddQuestionType").select2("val", "text"), $(".jsAddQuestionPlace").addClass("hidden"), $('#jsAddQuestionYesNoYSelect option[value="0"]').prop("selected", !0), $('#jsAddQuestionYesNoYStatus option[value="pass"]').prop("selected", !0), $('#jsAddcallbackReferenceQuestionYesNoNSelect option[value="0"]').prop("selected", !0), $('#jsAddQuestionYesNoNStatus option[value="pass"]').prop("selected", !0), $(".jsAddQuestionChoiceAnswer").val(""), $(".csChoiceBox").html(""), $('#jsAddQuestionChoiceAnswerScore option[value="0"]').prop("selected", !0), $('#jsAddQuestionChoiceAnswerStatus option[value="pass"]').prop("selected", !0), $(".jsAddQuestionVideoType").prop("checked", !1), $(".jsAddQuestionUploadVideoBox").addClass("hidden"), $(".jsAddQuestionRecordVideoBox").addClass("hidden"), $(".jsAddQuestionLinkVideoBox").addClass("hidden"), $("#jsAddQuestionLink").val(""), i = { question_id: 0, question_title: "", question_required: !1, question_content: "", question_type: "text", choice_list: {}, video_type: "upload", video_file_name: "" } } }));