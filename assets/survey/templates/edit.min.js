$((function () { let t, e, i = 0, n = { title: "", description: "", category: "", is_recurring: !1, recur_type: "days", recur_number: 0, available_date: 0, questions: [] }, s = []; function o(t = !1) { if (!s.length) return $("#jsEditQuestionsArea").html('<p class="alert alert-info text-center">No questions found yet.</p>'); let e = ""; s.map((function (i, n) { void 0 !== i.description || "tag" === i.question_type ? (t && (i.plainDescription = $("<div>").html(i.question_content).text().trim(), i.description = i.question_content, i.slug = getSlug(i.question_content), s[n] = i), e += getDescriptionPreview(i, !0)) : (t && (i.choice_list = JSON.parse(i.choices_json), i.question_required = i.is_required, s[n] = i), e += getQuestionPreview(i, "", !0)) })), $("#jsEditQuestionsArea").html(e) } function a(t) { s = s.filter((function (e) { return e.question_id != t })), o() } function c(t) { return s.filter((function (e) { return e.question_id == t }))[0] } function r(t) { $("#sectionMain").addClass("hidden"), $("#sectionAddQuestionBox").addClass("hidden"), $("#sectionEditQuestionBox").addClass("hidden"), $("#sectionEditDescription").addClass("hidden"), $("#jsEditEditDescriptionId").val(""), e.setButtons(""), setTimeout((function () { "basic" === t ? ($("#sectionMain").removeClass("hidden"), e.setButtons('<button type="button" class="btn btn-orange jsTemplateEditSaveBtn"><i class="fa fa-save"></i>Save Changes</button>')) : "add_question" === t ? ($("#sectionAddQuestionBox").removeClass("hidden"), e.setButtons('\n                    <button type="button" class="btn btn-black jsBackToEditCoursePage"><i class="fa fa-arrow-left" aria-hidden="true"></i>&nbsp;Back</button>\n                    <button type="button" class="btn btn-orange jsAddQuestionSaveBtn"><i class="fa fa-plus-circle" aria-hidden="true"></i>&nbsp;Save Question</button>\n                ')) : "edit_question" === t ? ($("#sectionEditQuestionBox").removeClass("hidden"), e.setButtons('\n                    <button type="button" class="btn btn-black jsBackToEditCoursePage"><i class="fa fa-arrow-left" aria-hidden="true"></i>&nbsp;Back</button>\n                    <button type="button" class="btn btn-orange jsEditQuestionSaveBtn"><i class="fa fa-plus-circle" aria-hidden="true"></i>&nbsp;Update Question</button>\n                ')) : "edit_description" === t ? ($("#sectionEditDescription").removeClass("hidden"), e.setButtons('\n                    <button type="button" class="btn btn-black jsBackToEditCoursePage"><i class="fa fa-arrow-left" aria-hidden="true"></i>&nbsp;Back</button>\n                    <button type="button" class="btn btn-orange jsEditEditDescription"><i class="fa fa-plus-circle" aria-hidden="true"></i>&nbsp;Save Changes</button>\n                ')) : "edit_edit_description" === t && ($("#sectionEditDescription").removeClass("hidden"), e.setButtons('\n                    <button type="button" class="btn btn-black jsBackToEditCoursePage"><i class="fa fa-arrow-left" aria-hidden="true"></i>&nbsp;Back</button>\n                    <button type="button" class="btn btn-orange jsEditModifyDescription"><i class="fa fa-plus-circle" aria-hidden="true"></i>&nbsp;Save Changes</button>\n                ')) }), 10) } $(document).on("keyup", "#jsTemplateEditTitle", (function (t) { n.title = $(this).val() })), $(document).on("keyup", "#jsTemplateEditDescription", (function (t) { n.description = $(this).val() })), $(document).on("click", "#jsTemplateEditRecur", (function (t) { n.is_recurring = $(this).prop("checked"), n.is_recurring ? $(".jsRecurringSurveyBox").removeClass("hidden") : $(".jsRecurringSurveyBox").addClass("hidden") })), $(document).on("keyup", "#jsTemplateEditRecurNumber", (function (t) { n.recur_number = $(this).val() })), $(document).on("change", "#jsTemplateEditRecurType", (function (t) { n.recur_type = $(this).val() })), $(document).on("click", ".jsTemplateEditSaveBtn", (function (o) { o.preventDefault(), n.title ? !n.is_recurring || n.recur_number ? 0 !== s.length ? (n.questions = s, async function () { t = callButtonHook($(".jsTemplateEditSaveBtn"), !0); try { const t = await makeSecureCallToApiServer(`surveys/templates/${i}`, { method: "PUT", headers: { "Content-Type": "application/json" }, data: JSON.stringify(n), caches: !1 }); e.closeModal(), _success(t.message, (function () { getTemplates() })) } catch (e) { handleErrorResponse(e), callButtonHook(t, !1) } }()) : _error("Please add at least one question.") : _error("Recur number is required.") : _error("Title is required.") })), $(document).on("click", ".jsTemplateEditAddQuestion", (function (t) { t.preventDefault(), r("add_question"), loadAddQuestionView((function (t) { t.tag = function () { let t = ""; return s.map((function (e) { void 0 !== e.description && (t = e.description) })), t }(), s.push(t), o(), r("basic") })) })), $(document).on("click", ".jsTemplateEditAddDescription", (function (t) { t.preventDefault(), r("edit_description"), CKEDITOR.instances.jsEditEditDescription || CKEDITOR.replace("jsEditEditDescription", { toolbar: [{ name: "basicstyles", items: ["Bold", "Italic", "Underline"] }] }), CKEDITOR.instances.jsEditEditDescription.setData("") })), $(document).on("click", ".jsTemplateEditEditDescription", (function (t) { t.preventDefault(); const e = c($(this).closest(".jsQuestionDescription").data("id").replace("desc_", "")); r("edit_edit_description"), CKEDITOR.instances.jsEditEditDescription || CKEDITOR.replace("jsEditEditDescription", { toolbar: [{ name: "basicstyles", items: ["Bold", "Italic", "Underline"] }] }), CKEDITOR.instances.jsEditEditDescription.setData(e.description), $("#jsEditEditDescriptionId").val(e.question_id) })), $(document).on("click", ".jsEditEditDescription", (function (t) { t.preventDefault(); const e = CKEDITOR.instances.jsEditEditDescription.getData(); e.trim() && "" !== $("<div>").html(e).text().trim() ? (s.push({ question_id: generateRandomAndUniqueId(), description: e, plainDescription: $("<div>").html(e).text().trim(), slug: getSlug(e), questions: [] }), r("basic"), o()) : _error("Description cannot be empty.") })), $(document).on("click", ".jsEditModifyDescription", (function (t) { t.preventDefault(); const e = CKEDITOR.instances.jsEditEditDescription.getData(), i = $("#jsEditEditDescriptionId").val(); e.trim() && "" !== $("<div>").html(e).text().trim() ? (s = s.map((function (t) { return t.question_id == i && (t.description = e, t.plainDescription = $("<div>").html(e).text().trim(), t.slug = getSlug(e)), t })), r("basic"), o()) : _error("Description cannot be empty.") })), $(document).on("click", ".jsRemoveEditDescription", (function (t) { t.preventDefault(); const e = $(this).closest(".jsQuestionDescription").data("id").replace("desc_", ""); _confirm("Do you want to delete this question?", (function () { a(e) })) })), $(document).on("click", ".jsBackToEditCoursePage", (function (t) { t.preventDefault(), r("basic") })), $(document).on("click", ".jsRemoveEditQuestion", (function (t) { t.preventDefault(); const e = $(this).closest(".jsQuestionView").data("id"); _confirm("Do you want to delete this question?", (function () { a(e) })) })), $(document).on("click", ".jsEditEditQuestion", (function (t) { t.preventDefault(), t.stopPropagation(); const e = c($(this).closest(".jsQuestionView").data("id")); r("edit_question"), loadEditQuestionView(e, (function (t) { !function (t, e) { s = s.map((function (i) { return i.question_id === e ? t : i })) }(t, t.question_id), o(), r("basic") })) })), window.startTemplateEditProcess = function (t) { i = t, e = $.msSiteModal(), e.loader(!0).open(), async function () { 0; n = { title: "", description: "", category: "", is_recurring: !1, recur_type: "days", recur_number: 0, available_date: 0 }; try { const t = await makeSecureCallToApiServer(`surveys/templates/view/edit/${i}`, { method: "GET" }); n = t.data, s = n.questions, e.setContent(t.view), $("#jsTemplateEditTitle").val(n.title), $("#jsTemplateEditDescription").val(n.description), $("#jsTemplateEditRecur").prop("checked", n.is_recurring), $("#jsTemplateEditRecurNumber").val(n.recur_number), $("#jsTemplateEditRecurType option[value='" + n.recur_type + "']").prop("selected", !0), n.is_recurring ? $(".jsRecurringSurveyBox").removeClass("hidden") : $(".jsRecurringSurveyBox").addClass("hidden"), o(!0), e.loader(!1), r("basic"), $("#jsEditQuestionsArea").sortable({ stop: function (t) { !function () { let t = $("#jsEditQuestionsArea").sortable("toArray", { attribute: "data-id" }), e = [], i = ""; t.map((function (t) { if ("desc_" === t.substr(0, 5)) question = c(t.replace("desc_", "")), e.push(question), i = question.plainDescription; else { let n = c(t); n.tag = i, e.push(n) } })), s = e }() }, onchange: function (t) { } }) } catch (t) { handleErrorResponse(t), e.closeModal() } }() } }));