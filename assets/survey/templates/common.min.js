function getDescriptionPreview(t, e = !1) { let i = ""; return i += `<div class="panel panel-default jsQuestionDescription" data-id="desc_${t.question_id}">`, i += '<div class="panel-heading">', i += '   <div class="row">', i += '       <div class="col-xs-9">', i += `           <h1 class="panel-text-heading text-medium jsCollapseBtn" data-target="collapse${t.question_id}">`, i += "               <strong>", i += '               <i class="fa fa-align-left"></i>&nbsp;', i += t.plainDescription, i += "               </strong>", i += "           </h1>", i += "       </div>", e ? (i += '       <div class="col-xs-3 text-right panel-text-heading" style="margin-top: 5px;">', i += '               <button type="button" class="btn btn-warning jsTemplateEditEditDescription" title="Edit Description">', i += '                   <i class="fa fa-edit"></i>', i += "               </button>", i += '               <button type="button" class="btn btn-danger jsRemoveEditDescription" title="Remove Description">', i += '                   <i class="fa fa-trash"></i>', i += "               </button>", i += "       </div>") : (i += '       <div class="col-xs-3 text-right panel-text-heading" style="margin-top: 5px;">', i += '               <button type="button" class="btn btn-warning jsTemplateEditDescription" title="Edit Description">', i += '                   <i class="fa fa-edit"></i>', i += "               </button>", i += '               <button type="button" class="btn btn-danger jsRemoveDescription" title="Remove Description">', i += '                   <i class="fa fa-trash"></i>', i += "               </button>", i += "       </div>"), i += "   </div>", i += "</div>", i += "   </div>", i += "</div>", i } function getQuestionPreview(t, e = "", i = !1) { let s = ""; if (s += `<div class="panel panel-default jsQuestionView" data-id="${t.question_id}">`, s += '<div class="panel-heading">', s += '   <div class="row">', s += '       <div class="col-xs-8">', s += `           <h1 class="panel-text-heading text-medium jsCollapseBtn" data-target="collapse${t.question_id}">`, s += "               <strong>", s += `               <i class="fa fa-${getIconFromQuestionType(t.question_type)}"></i>`, s += `               ${t.question_title.length > 30 ? t.question_title.substr(0, 30) : t.question_title}...`, s += "               </strong>", s += "           </h1>", s += "       </div>", i ? (s += '       <div class="col-xs-4 text-right panel-text-heading" style="margin-top: 5px;">', s += '               <button type="button" class="btn btn-warning jsEditEditQuestion" title="Edit Question">', s += '                   <i class="fa fa-edit"></i>', s += "               </button>", s += '               <button type="button" class="btn btn-danger jsRemoveEditQuestion" title="Remove Question">', s += '                   <i class="fa fa-trash"></i>', s += "               </button>", s += "       </div>", s += "   </div>", s += "</div>") : (s += '       <div class="col-xs-4 text-right panel-text-heading" style="margin-top: 5px;">', s += '               <button type="button" class="btn btn-warning jsEditQuestion" title="Edit Question">', s += '                   <i class="fa fa-edit"></i>', s += "               </button>", s += '               <button type="button" class="btn btn-danger jsRemoveQuestion" title="Remove Question">', s += '                   <i class="fa fa-trash"></i>', s += "               </button>", s += "       </div>", s += "   </div>", s += "</div>"), s += `   <div class="panel-body hidden" id="collapse${t.question_id}">`, s += '       <div class="row">', s += `           <div class="col-sm-12 col-md-${t.video_file_name ? "8" : "12"}">`, s += '               <h1 class="text-medium">', s += "                   <strong>", s += `                   ${t.question_title}`, s += "                   " + (1 == t.question_required ? '<span class="text-danger">*</span>' : ""), s += "                   </strong>", s += "               </h1>", s += '               <p class="text-medium">', s += `                   ${t.question_content}`, s += "               </p>", s += "           </div>", t.video_file_name && "none" != t.video_file_name && (s += '           <div class="col-sm-12 col-md-4">', s += getFileWithTag(t.video_file_name, { style: "width: 100%", controls: "true" }), s += "           </div>"), s += "       </div>", s += "       <br/>", s += '       <div class="row">', s += '           <div class="col-sm-12 col-md-12">', "text" === t.question_type) s += `<textarea type="text" name="textarea_${t.question_id}" class="form-control cs-text-answer" is_required="${1 == t.question_required ? 1 : 0}" rows="5" style="resize: none;" placeholder="Write the answer here...."></textarea>`; else if ("yes_no" === t.question_type) s += '<div class="row">', s += '\t<div class="col-sm-12">', s += '       <label class="control control--radio">', s += `           <input type="radio" name="yes_no_${t.question_id}" value="yes"> Yes`, s += '\t        <div class="control__indicator"></div>', s += "\t    </label> &nbsp;&nbsp;", s += '\t\t<label class="control control--radio">', s += `\t\t\t<input type="radio" name="yes_no_${t.question_id}" value="no"> No`, s += '\t\t\t<div class="control__indicator"></div>', s += "\t\t</label>", s += "\t</div>", s += "</div>"; else if ("rating" === t.question_type) { s += '<div class="row">', s += '   <div class="col-sm-12">', s += '       <div class="rating-container" style="text-align: center; font-size: 2rem; display: flex; justify-content: center; width: 100%;">', s += '           <div class="rating-stars" style="display: flex; justify-content: space-between; width: 100%;">'; for (let e = 1; e <= t.choice_list.rating; e++)s += '               <label class="control control--radio" style="cursor: pointer; flex: 1; text-align: center;">', s += `                   <input type="radio" name="rating_${t.question_id}" value="${e}" style="display: none;">`, s += '                   <span class="star" style="color: #ccc; font-size: 50px;">&#9733;</span>', s += "               </label>"; s += "           </div>", s += "       </div>", s += "   </div>", s += '   <div class="col-xs-6 text-left">', s += `           <span class="rating-text text-medium" style="margin-right: 10px;">${t.choice_list.min || "Poor"}</span>`, s += "   </div>", s += '   <div class="col-xs-6 text-right">', s += `           <span class="rating-text text-medium" style="margin-left: 10px;">${t.choice_list.max || "Excellent"}</span>`, s += "   </div>", s += "</div>" } else { const e = "multiple_choice" === t.question_type ? "checkbox" : "radio", i = ("multiple_choice" === t.question_type ? "multiple_choice" : "single_choice") + "_" + t.question_id; for (const n in t.choice_list) { const o = t.choice_list[n]; s += `\n            <label class="control control--${e}">\n                <input type="${e}" name="${i}" value="${o.answer_choice}"> ${o.answer_choice}\n                <div class="control__indicator"></div>\n            </label> &nbsp;&nbsp;` } } return s += "           </div>", s += "       </div>", s += "   </div>", s += "</div>", s } function getQuestionViewPreview(t, e = "") { t.choices_json && (t.choice_list = JSON.parse(t.choices_json)); let i = ""; if (i += `<div class="panel panel-default jsQuestionView" data-id="${t.question_id}">`, i += '<div class="panel-heading">', i += '   <div class="row">', i += '       <div class="col-xs-8">', i += `           <h1 class="panel-text-heading text-medium jsCollapseBtn" data-target="collapse${t.question_id}">`, i += "               <strong>", i += `               <i class="fa fa-${getIconFromQuestionType(t.question_type)}"></i>`, i += `               ${t.question_title.length > 30 ? t.question_title.substr(0, 30) : t.question_title}...`, i += "               </strong>", i += "           </h1>", i += "       </div>", i += '       <div class="col-xs-4 text-right panel-text-heading" style="margin-top: 5px;">', i += '               <button type="button" class="btn btn-warning jsEditQuestion" title="Edit Question">', i += '                   <i class="fa fa-edit"></i>', i += "               </button>", i += '               <button type="button" class="btn btn-danger jsRemoveQuestion" title="Remove Question">', i += '                   <i class="fa fa-trash"></i>', i += "               </button>", i += "       </div>", i += "   </div>", i += "</div>", i += `   <div class="panel-body hidden" id="collapse${t.question_id}">`, i += '       <div class="row">', i += `           <div class="col-sm-12 col-md-${t.video_file_name ? "8" : "12"}">`, i += '               <h1 class="text-medium">', i += "                   <strong>", i += `                   ${t.question_title}`, i += "                   " + (1 == t.question_required ? '<span class="text-danger">*</span>' : ""), i += "                   </strong>", i += "               </h1>", i += '               <p class="text-medium">', i += `                   ${t.question_content}`, i += "               </p>", i += "           </div>", t.video_file_name && "none" != t.video_file_name && (i += '           <div class="col-sm-12 col-md-4">', i += getFileWithTag(t.video_file_name, { style: "width: 100%", controls: "true" }), i += "           </div>"), i += "       </div>", i += "       <br/>", i += '       <div class="row">', i += '           <div class="col-sm-12 col-md-12">', "text" === t.question_type) i += `<textarea type="text" name="textarea_${t.question_id}" class="form-control cs-text-answer" is_required="${1 == t.question_required ? 1 : 0}" rows="5" style="resize: none;" placeholder="Write the answer here...."></textarea>`; else if ("yes_no" === t.question_type) i += '<div class="row">', i += '\t<div class="col-sm-12">', i += '       <label class="control control--radio">', i += `           <input type="radio" name="yes_no_${t.question_id}" value="yes"> Yes`, i += '\t        <div class="control__indicator"></div>', i += "\t    </label> &nbsp;&nbsp;", i += '\t\t<label class="control control--radio">', i += `\t\t\t<input type="radio" name="yes_no_${t.question_id}" value="no"> No`, i += '\t\t\t<div class="control__indicator"></div>', i += "\t\t</label>", i += "\t</div>", i += "</div>"; else if ("rating" === t.question_type) { i += '<div class="row">', i += '   <div class="col-sm-12">', i += '       <div class="rating-container" style="text-align: center; font-size: 2rem; display: flex; justify-content: center; width: 100%;">', i += '           <div class="rating-stars" style="display: flex; justify-content: space-between; width: 100%;">'; for (let e = 1; e <= t.choice_list.rating; e++)i += '               <label class="control control--radio" style="cursor: pointer; flex: 1; text-align: center;">', i += `                   <input type="radio" name="rating_${t.question_id}" value="${e}" style="display: none;">`, i += '                   <span class="star" style="color: #ccc; font-size: 50px;">&#9733;</span>', i += "               </label>"; i += "           </div>", i += "       </div>", i += "   </div>", i += '   <div class="col-xs-6 text-left">', i += `           <span class="rating-text text-medium" style="margin-right: 10px;">${t.choice_list.min || "Poor"}</span>`, i += "   </div>", i += '   <div class="col-xs-6 text-right">', i += `           <span class="rating-text text-medium" style="margin-left: 10px;">${t.choice_list.max || "Excellent"}</span>`, i += "   </div>", i += "</div>" } else { const e = "multiple_choice" === t.question_type ? "checkbox" : "radio", s = ("multiple_choice" === t.question_type ? "multiple_choice" : "single_choice") + "_" + t.question_id; for (const n in t.choice_list) { const o = t.choice_list[n]; i += `\n            <label class="control control--${e}">\n                <input type="${e}" name="${s}" value="${o.answer_choice}"> ${o.answer_choice}\n                <div class="control__indicator"></div>\n            </label> &nbsp;&nbsp;` } } return i += "           </div>", i += "       </div>", i += "   </div>", i += "</div>", i } function generateQuestionPreviewView(t) { t.choices_json && (t.choice_list = JSON.parse(t.choices_json)); let e = ""; if (e += `<div class="panel panel-default jsQuestionView" data-id="${t.question_id}">`, "tag" === t.question_type && (e += '<div class="panel-heading">', e += '   <div class="row">', e += '       <div class="col-xs-8">', e += `           <h1 class="panel-text-heading text-medium jsCollapseBtn" data-target="collapse${t.question_id}">`, e += "               <strong>", e += `               <i class="fa fa-${getIconFromQuestionType(t.question_type)}"></i>`, e += `               ${t.question_title}`, e += "               </strong>", e += "           </h1>", e += "       </div>", e += "   </div>", e += "</div>"), "tag" != t.question_type) if (e += `   <div class="panel-body" id="collapse${t.question_id}">`, e += '       <div class="row">', e += `           <div class="col-sm-12 col-md-${t.video_file_name ? "8" : "12"}">`, e += '               <h1 class="text-medium">', e += "                   <strong>", e += `               <i class="fa fa-${getIconFromQuestionType(t.question_type)}"></i>`, e += `                   ${t.question_title}`, e += "                   " + (1 == t.question_required ? '<span class="text-danger">*</span>' : ""), e += "                   </strong>", e += "               </h1>", e += '               <p class="text-medium">', e += `                   ${t.question_content}`, e += "               </p>", e += "           </div>", t.video_file_name && "none" != t.video_file_name && (e += '           <div class="col-sm-12 col-md-4">', e += getFileWithTag(t.video_file_name, { style: "width: 100%", controls: "true" }), e += "           </div>"), e += "       </div>", e += "       <br/>", e += '       <div class="row">', e += '           <div class="col-sm-12 col-md-12">', "text" === t.question_type) e += `<textarea type="text" name="textarea_${t.question_id}" class="form-control cs-text-answer" is_required="${1 == t.question_required ? 1 : 0}" rows="5" style="resize: none;" placeholder="Write the answer here...."></textarea>`; else if ("yes_no" === t.question_type) e += '<div class="row">', e += '\t<div class="col-sm-12">', e += '       <label class="control control--radio">', e += `           <input type="radio" name="yes_no_${t.question_id}" value="yes"> Yes`, e += '\t        <div class="control__indicator"></div>', e += "\t    </label> &nbsp;&nbsp;", e += '\t\t<label class="control control--radio">', e += `\t\t\t<input type="radio" name="yes_no_${t.question_id}" value="no"> No`, e += '\t\t\t<div class="control__indicator"></div>', e += "\t\t</label>", e += "\t</div>", e += "</div>"; else if ("rating" === t.question_type) { e += '<div class="row">', e += '   <div class="col-sm-12">', e += '       <div class="rating-container" style="text-align: center; font-size: 2rem; display: flex; justify-content: center; width: 100%;">', e += '           <div class="rating-stars" style="display: flex; justify-content: space-between; width: 100%;">'; for (let i = 1; i <= t.choice_list.rating; i++)e += '               <label class="control control--radio" style="cursor: pointer; flex: 1; text-align: center;">', e += `                   <input type="radio" name="rating_${t.question_id}" value="${i}" style="display: none;">`, e += '                   <span class="star" style="color: #ccc; font-size: 50px;">&#9733;</span>', e += "               </label>"; e += "           </div>", e += "       </div>", e += "   </div>", e += '   <div class="col-xs-6 text-left">', e += `           <span class="rating-text text-medium" style="margin-right: 10px;">${t.choice_list.min || "Poor"}</span>`, e += "   </div>", e += '   <div class="col-xs-6 text-right">', e += `           <span class="rating-text text-medium" style="margin-left: 10px;">${t.choice_list.max || "Excellent"}</span>`, e += "   </div>", e += "</div>" } else { const i = "multiple_choice" === t.question_type ? "checkbox" : "radio", s = ("multiple_choice" === t.question_type ? "multiple_choice" : "single_choice") + "_" + t.question_id; for (const n in t.choice_list) { const o = t.choice_list[n]; e += `\n            <label class="control control--${i}">\n                <input type="${i}" name="${s}" value="${o.answer_choice}"> ${o.answer_choice}\n                <div class="control__indicator"></div>\n            </label> &nbsp;&nbsp;` } } return e += "           </div>", e += "       </div>", e += "   </div>", e += "</div>", e } function getIconFromQuestionType(t) { return "rating" === t ? "star-o" : "text" === t ? "comment-o" : "tag" === t ? "align-left" : "square-o" } function getFileWithTag(t, e = {}, i = "y") { let s = ""; if (Object.keys(e).length) for (let t in e) s += `${t}="${e[t]}" `; return null !== t.match(/^(https?\:\/\/)?((www\.)?youtube\.com|youtu\.be)\/.+$/g) ? `\n\t\t<div class="embed-responsive embed-responsive-16by9">\n\t\t\t<iframe class="embed-responsive-item" src="https://www.youtube.com/embed/${youtubeLinkParser(t)}" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>\n\t\t</div>` : null !== t.match(/^(http|https)?:\/\/(www\.|player\.)?vimeo\.com\/(?:channels\/(?:\w+\/)?|groups\/([^\/]*)\/videos\/|video\/|)(\d+)(?:|\/\?)$/gim) ? `\n\t\t<div class="embed-responsive embed-responsive-16by9">\n\t\t\t<iframe class="embed-responsive-item" src="https://player.vimeo.com/video/${vimeoLinkParser(t)}"  frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>\n\t\t</div>` : null !== t.match(/.zip/i) ? `\n\t\t<a class="btn btn-black" \n\t\t\ttitle="Download file"\n\t\t\tplacement="top"\n\t\t\thref="${getFileWithUrl(t)}"\n\t\t><i class="fa fa-download" aria-hidden="true"></i>&nbsp;Download file</a>` : null !== t.match(/.ppt|.pptx/i) ? `\n\t\t<iframe \n\t\t\t${s}\n\t\t\tsrc="https://view.officeapps.live.com/op/embed.aspx?src=${getFileWithUrl(t)}"\n\t\t\tframeborder="0"\n\t\t></iframe>` : null !== t.match(/.jpg|.jpeg|.png|.gif/i) ? `\n\t\t<img \n\t\t\t${s}\n\t\t\tsrc="${getFileWithUrl(t)}"\n\t\t>` : null !== t.match(/.mp3|.wav/i) ? `\n\t\t <audio controls>\n        \t<source src="${getFileWithUrl(t)}" type="audio/mp3">\n    \t</audio>` : `\n        <video ${s}>\n            <source type="video/mp4" src="${getFileWithUrl(t)}" />\n        </video>` } function youtubeLinkParser(t) { let e = t.match(/^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))\??v?=?([^#&?]*).*/); return !(!e || 11 != e[7].length) && e[7] } function getFileWithUrl(t) { return "https://automotohrattachments.s3.amazonaws.com/" + t } function vimeoLinkParser(t) { const e = t.match(/^.*(vimeo\.com\/)((channels\/[A-z]+\/)|(groups\/[A-z]+\/videos\/))?([0-9]+)/); return !(!e || 9 != e[5].length) && e[5] } function getSlug(t) { return $("<div>").html(t).text().trim().toLowerCase().replace(/[^a-z0-9\s-]/g, "").replace(/\s+/g, "-").replace(/-+/g, "-") } function generateRandomAndUniqueId() { return `${Math.floor(1e6 * Math.random()) + 1}-${Date.now()}` } $((function () { window.makeSecureCallToApiServer = async function (t, e) { return new Promise((function (i, s) { const n = { url: `${apiURL}${t}`, headers: { Authorization: "Bearer " + apiAccessToken }, cache: !1 }, o = $.extend(!0, {}, e, n); $.ajax(o).fail((function (t) { s(t) })).done((function (t) { i(t) })) })) }, $(document).on("click", ".rating-stars .control--radio", (function () { $(this).siblings().find(".star").css("color", "#fd7a2a"), $(this).prevAll().find(".star").css("color", "#fd7a2a"), $(this).find(".star").css("color", "#fd7a2a"), $(this).nextAll().find(".star").css("color", "#ccc") })), $(document).on("click", ".jsCollapseBtn", (function (t) { t.preventDefault(), $("#" + $(this).data("target")).toggleClass("hidden") })) }));